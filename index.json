{
  "api/OmiyaGames.Saves.AccessModifier.html": {
    "href": "api/OmiyaGames.Saves.AccessModifier.html",
    "title": "Enum AccessModifier | Saves documentation",
    "keywords": "Enum AccessModifier Enumerator indicating the access permissions of a generated property. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public enum AccessModifier Fields Name Description Internal None Public"
  },
  "api/OmiyaGames.Saves.AddAudioSettings.html": {
    "href": "api/OmiyaGames.Saves.AddAudioSettings.html",
    "title": "Class AddAudioSettings | Saves documentation",
    "keywords": "Class AddAudioSettings Adds audio settings to GameSettings . Inheritance Object SettingsVersionGeneratorDecorator AddAudioSettings Implements ISettingsVersionGenerator ISettingsVersion Inherited Members SettingsVersionGeneratorDecorator.allSettingsGenerator SettingsVersionGeneratorDecorator.Contains(String) SettingsVersionGeneratorDecorator.IsSetting(String) SettingsVersionGeneratorDecorator.IsGenerator<T>(String) SettingsVersionGeneratorDecorator.GetSetting(String) SettingsVersionGeneratorDecorator.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AddAudioSettings : SettingsVersionGeneratorDecorator, ISettingsVersionGenerator, ISettingsVersion Fields AppVersion Declaration public const ushort AppVersion = 0 Field Value Type Description UInt16 Properties Version Declaration public override ushort Version { get; } Property Value Type Description UInt16 Overrides SettingsVersionGeneratorDecorator.Version Methods GetKeysToRemove() Declaration protected override string[] GetKeysToRemove() Returns Type Description String [] Overrides SettingsVersionGeneratorDecorator.GetKeysToRemove() GetNewGenerators() Declaration protected override IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] Overrides SettingsVersionGeneratorDecorator.GetNewGenerators() Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.AddHighScores.html": {
    "href": "api/OmiyaGames.Saves.AddHighScores.html",
    "title": "Class AddHighScores | Saves documentation",
    "keywords": "Class AddHighScores Adds high score settings to GameSettings . Inheritance Object SettingsVersionGeneratorDecorator AddHighScores Implements ISettingsVersionGenerator ISettingsVersion Inherited Members SettingsVersionGeneratorDecorator.allSettingsGenerator SettingsVersionGeneratorDecorator.Contains(String) SettingsVersionGeneratorDecorator.IsSetting(String) SettingsVersionGeneratorDecorator.IsGenerator<T>(String) SettingsVersionGeneratorDecorator.GetSetting(String) SettingsVersionGeneratorDecorator.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AddHighScores : SettingsVersionGeneratorDecorator, ISettingsVersionGenerator, ISettingsVersion Fields AppVersion Declaration public const ushort AppVersion = 3 Field Value Type Description UInt16 MaxListSize Declaration public const int MaxListSize = 20 Field Value Type Description Int32 Properties Version Declaration public override ushort Version { get; } Property Value Type Description UInt16 Overrides SettingsVersionGeneratorDecorator.Version Methods GetKeysToRemove() Declaration protected override string[] GetKeysToRemove() Returns Type Description String [] Overrides SettingsVersionGeneratorDecorator.GetKeysToRemove() GetNewGenerators() Declaration protected override IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] Overrides SettingsVersionGeneratorDecorator.GetNewGenerators() Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.AddLanguageSettings.html": {
    "href": "api/OmiyaGames.Saves.AddLanguageSettings.html",
    "title": "Class AddLanguageSettings | Saves documentation",
    "keywords": "Class AddLanguageSettings Adds language settings to GameSettings . Inheritance Object SettingsVersionGeneratorDecorator AddLanguageSettings Implements ISettingsVersionGenerator ISettingsVersion Inherited Members SettingsVersionGeneratorDecorator.allSettingsGenerator SettingsVersionGeneratorDecorator.Contains(String) SettingsVersionGeneratorDecorator.IsSetting(String) SettingsVersionGeneratorDecorator.IsGenerator<T>(String) SettingsVersionGeneratorDecorator.GetSetting(String) SettingsVersionGeneratorDecorator.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AddLanguageSettings : SettingsVersionGeneratorDecorator, ISettingsVersionGenerator, ISettingsVersion Fields AppVersion Declaration public const ushort AppVersion = 2 Field Value Type Description UInt16 Properties Version Declaration public override ushort Version { get; } Property Value Type Description UInt16 Overrides SettingsVersionGeneratorDecorator.Version Methods GetKeysToRemove() Declaration protected override string[] GetKeysToRemove() Returns Type Description String [] Overrides SettingsVersionGeneratorDecorator.GetKeysToRemove() GetNewGenerators() Declaration protected override IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] Overrides SettingsVersionGeneratorDecorator.GetNewGenerators() Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.AddLocalAnalytics.html": {
    "href": "api/OmiyaGames.Saves.AddLocalAnalytics.html",
    "title": "Class AddLocalAnalytics | Saves documentation",
    "keywords": "Class AddLocalAnalytics Adds local analytics (like how long the player played, how many levels they have unlocked, etc.) to GameSettings . Inheritance Object SettingsVersionGeneratorDecorator AddLocalAnalytics Implements ISettingsVersionGenerator ISettingsVersion Inherited Members SettingsVersionGeneratorDecorator.allSettingsGenerator SettingsVersionGeneratorDecorator.Contains(String) SettingsVersionGeneratorDecorator.IsSetting(String) SettingsVersionGeneratorDecorator.IsGenerator<T>(String) SettingsVersionGeneratorDecorator.GetSetting(String) SettingsVersionGeneratorDecorator.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AddLocalAnalytics : SettingsVersionGeneratorDecorator, ISettingsVersionGenerator, ISettingsVersion Fields AppVersion Declaration public const ushort AppVersion = 1 Field Value Type Description UInt16 DefaultNumLevelsUnlocked Declaration public const int DefaultNumLevelsUnlocked = 1 Field Value Type Description Int32 DefaultNumLevelsUnlockedName Declaration public const string DefaultNumLevelsUnlockedName = \"DefaultNumLevelsUnlocked\" Field Value Type Description String Properties Version Declaration public override ushort Version { get; } Property Value Type Description UInt16 Overrides SettingsVersionGeneratorDecorator.Version Methods GetKeysToRemove() Declaration protected override string[] GetKeysToRemove() Returns Type Description String [] Overrides SettingsVersionGeneratorDecorator.GetKeysToRemove() GetNewGenerators() Declaration protected override IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] Overrides SettingsVersionGeneratorDecorator.GetNewGenerators() Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.AddOptions.html": {
    "href": "api/OmiyaGames.Saves.AddOptions.html",
    "title": "Class AddOptions | Saves documentation",
    "keywords": "Class AddOptions Adds Options settings to GameSettings . Inheritance Object SettingsVersionGeneratorDecorator AddOptions Implements ISettingsVersionGenerator ISettingsVersion Inherited Members SettingsVersionGeneratorDecorator.allSettingsGenerator SettingsVersionGeneratorDecorator.Contains(String) SettingsVersionGeneratorDecorator.IsSetting(String) SettingsVersionGeneratorDecorator.IsGenerator<T>(String) SettingsVersionGeneratorDecorator.GetSetting(String) SettingsVersionGeneratorDecorator.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AddOptions : SettingsVersionGeneratorDecorator, ISettingsVersionGenerator, ISettingsVersion Fields AppVersion Declaration public const ushort AppVersion = 4 Field Value Type Description UInt16 DefaultCameraSmoothFactor Declaration public const float DefaultCameraSmoothFactor = 0.25F Field Value Type Description Single DefaultScale Declaration public const float DefaultScale = 1F Field Value Type Description Single DefaultSensitivity Declaration public const float DefaultSensitivity = 0.5F Field Value Type Description Single Properties CameraSmoothFactor Provides Camera Smooth Factor. Returns a negative value if not set Declaration public static float CameraSmoothFactor { get; } Property Value Type Description Single CustomTimeScale Declaration public static float CustomTimeScale { get; } Property Value Type Description Single IsHeadBobbingEnabled Declaration public static bool IsHeadBobbingEnabled { get; } Property Value Type Description Boolean Version Declaration public override ushort Version { get; } Property Value Type Description UInt16 Overrides SettingsVersionGeneratorDecorator.Version Methods GetKeysToRemove() Declaration protected override string[] GetKeysToRemove() Returns Type Description String [] Overrides SettingsVersionGeneratorDecorator.GetKeysToRemove() GetNewGenerators() Declaration protected override IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] Overrides SettingsVersionGeneratorDecorator.GetNewGenerators() Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.AsyncCompositeSettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.AsyncCompositeSettingsRecorder.html",
    "title": "Class AsyncCompositeSettingsRecorder | Saves documentation",
    "keywords": "Class AsyncCompositeSettingsRecorder TODO. Inheritance Object AsyncCompositeSettingsRecorder Implements IAsyncSettingsRecorder IReadOnlyList < IAsyncSettingsRecorder > Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AsyncCompositeSettingsRecorder : IAsyncSettingsRecorder Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Initial verison. Constructors AsyncCompositeSettingsRecorder(IEnumerable<IAsyncSettingsRecorder>) TODO Declaration public AsyncCompositeSettingsRecorder(IEnumerable<IAsyncSettingsRecorder> settings) Parameters Type Name Description IEnumerable < IAsyncSettingsRecorder > settings Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public IAsyncSettingsRecorder this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description IAsyncSettingsRecorder Methods DeleteAll() Deletes all the keys. Declaration public WaitLoad DeleteAll() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Remarks This method will call all events listening to DeleteKey(String) . DeleteKey(String) Deletes a key and its associating value. Declaration public WaitLoad DeleteKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. GetBool(String, Boolean) Asynchronously gets a boolean value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<bool> GetBool(string key, bool defaultValue) Parameters Type Name Description String key The key associated with this value. Boolean defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Boolean > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. GetDateTimeUtc(String, DateTime) Asynchronously gets a value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<DateTime> GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key The key associated with this value. DateTime defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < DateTime > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. GetEnum<T>(String, T) Asynchronously gets an enum value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<T> GetEnum<T>(string key, T defaultValue) where T : Enum Parameters Type Name Description String key The key associated with this value. T defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue <T> A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. Type Parameters Name Description T An enumerator type. GetEnumerator() Declaration public IEnumerator<IAsyncSettingsRecorder> GetEnumerator() Returns Type Description IEnumerator < IAsyncSettingsRecorder > GetFloat(String, Single) Asynchronously gets a float value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<float> GetFloat(string key, float defaultValue) Parameters Type Name Description String key The key associated with this value. Single defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Single > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. GetInt(String, Int32) Asynchronously gets an integer value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<int> GetInt(string key, int defaultValue) Parameters Type Name Description String key The key associated with this value. Int32 defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Int32 > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. GetString(String, String) Asynchronously gets a string value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<string> GetString(string key, string defaultValue) Parameters Type Name Description String key The key associated with this value. String defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < String > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. GetTimeSpan(String, TimeSpan) Asynchronously gets a value from the first IAsyncSettingsRecorder . Declaration public WaitLoadValue<TimeSpan> GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key The key associated with this value. TimeSpan defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < TimeSpan > A coroutine that indicates when it's finished loading, and provides the retrieved results. If list is empty, returns null instead. HasKey(String) Checks if this setting has a pairing with key. Declaration public WaitLoadValue<bool> HasKey(string key) Parameters Type Name Description String key A unique key. Returns Type Description WaitLoadValue < Boolean > Coroutine indicating if there is a key or not at the end of operation. Save() Saves the entire settings. Declaration public WaitLoad Save() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. SetBool(String, Boolean) Store a key-value pair with boolean as value type. Declaration public void SetBool(string key, bool value) Parameters Type Name Description String key A unique key to pair value with. Boolean value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetDateTimeUtc(String, DateTime) Store a key-value pair with as value type. Declaration public void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key A unique key to pair value with. DateTime value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetEnum<T>(String, T) Store a key-value pair with enum as value type. Declaration public void SetEnum<T>(string key, T value) where T : Enum Parameters Type Name Description String key A unique key to pair value with. T value The value to store Type Parameters Name Description T An enumerator type. Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetFloat(String, Single) Store a key-value pair with float as value type. Declaration public void SetFloat(string key, float value) Parameters Type Name Description String key A unique key to pair value with. Single value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetInt(String, Int32) Store a key-value pair with integer as value type. Declaration public void SetInt(string key, int value) Parameters Type Name Description String key A unique key to pair value with. Int32 value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetString(String, String) Store a key-value pair with string as value type. Declaration public void SetString(string key, string value) Parameters Type Name Description String key A unique key to pair value with. String value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetTimeSpan(String, TimeSpan) Store a key-value pair with as value type. Declaration public void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key A unique key to pair value with. TimeSpan value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Adds an event listening to DeleteKey(String) and/or DeleteAll() . Declaration public void SubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Listen to a specific key. Set to empty string or null to listen to DeleteAll() event only. IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion. UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Removes an event listener from DeleteKey(String) and/or DeleteAll() . Declaration public void UnsubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Unsubscribe to a specific key. Set to empty string or null to unsubscribe from DeleteAll() . IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion. Implements IAsyncSettingsRecorder IReadOnlyList<>"
  },
  "api/OmiyaGames.Saves.AsyncPlayerPrefsSettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.AsyncPlayerPrefsSettingsRecorder.html",
    "title": "Class AsyncPlayerPrefsSettingsRecorder | Saves documentation",
    "keywords": "Class AsyncPlayerPrefsSettingsRecorder Inheritance Object AsyncSettingsRecorder AsyncSettingsRecorderDecorator AsyncPlayerPrefsSettingsRecorder Implements IAsyncSettingsRecorder IDisposable Inherited Members AsyncSettingsRecorderDecorator.GetBool(String, Boolean) AsyncSettingsRecorderDecorator.SetBool(String, Boolean) AsyncSettingsRecorderDecorator.GetEnum<TEnum>(String, TEnum) AsyncSettingsRecorderDecorator.SetEnum<TEnum>(String, TEnum) AsyncSettingsRecorderDecorator.GetDateTimeUtc(String, DateTime) AsyncSettingsRecorderDecorator.SetDateTimeUtc(String, DateTime) AsyncSettingsRecorderDecorator.GetTimeSpan(String, TimeSpan) AsyncSettingsRecorderDecorator.SetTimeSpan(String, TimeSpan) AsyncSettingsRecorder.GetEnum<T>(String, T) AsyncSettingsRecorder.SetEnum<T>(String, T) AsyncSettingsRecorder.Dispose() AsyncSettingsRecorder.ToString() AsyncSettingsRecorder.SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.TryGetEvents(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.GetAllEvents() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AsyncPlayerPrefsSettingsRecorder : AsyncSettingsRecorderDecorator, IAsyncSettingsRecorder Methods DeleteAll() Deletes all the keys. Declaration public override WaitLoad DeleteAll() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Overrides AsyncSettingsRecorder.DeleteAll() Remarks This method will call all events listening to DeleteKey(String) . DeleteKey(String) Deletes a key and its associating value. Declaration public override WaitLoad DeleteKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Overrides AsyncSettingsRecorder.DeleteKey(String) GetFloat(String, Single) Asynchronously gets a float value. Declaration public override WaitLoadValue<float> GetFloat(string key, float defaultValue) Parameters Type Name Description String key The key associated with this value. Single defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Single > A coroutine that indicates when it's finished loading, and provides the retrieved results. Overrides AsyncSettingsRecorder.GetFloat(String, Single) GetInt(String, Int32) Asynchronously gets an integer value. Declaration public override WaitLoadValue<int> GetInt(string key, int defaultValue) Parameters Type Name Description String key The key associated with this value. Int32 defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Int32 > A coroutine that indicates when it's finished loading, and provides the retrieved results. Overrides AsyncSettingsRecorder.GetInt(String, Int32) GetString(String, String) Asynchronously gets a string value. Declaration public override WaitLoadValue<string> GetString(string key, string defaultValue) Parameters Type Name Description String key The key associated with this value. String defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < String > A coroutine that indicates when it's finished loading, and provides the retrieved results. Overrides AsyncSettingsRecorder.GetString(String, String) HasKey(String) Checks if this setting has a pairing with key. Declaration public override WaitLoadValue<bool> HasKey(string key) Parameters Type Name Description String key A unique key. Returns Type Description WaitLoadValue < Boolean > Coroutine indicating if there is a key or not at the end of operation. Overrides AsyncSettingsRecorder.HasKey(String) Save() Saves the entire settings. Declaration public override WaitLoad Save() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Overrides AsyncSettingsRecorder.Save() SetFloat(String, Single) Store a key-value pair with float as value type. Declaration public override void SetFloat(string key, float value) Parameters Type Name Description String key A unique key to pair value with. Single value The value to store Overrides AsyncSettingsRecorder.SetFloat(String, Single) Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetInt(String, Int32) Store a key-value pair with integer as value type. Declaration public override void SetInt(string key, int value) Parameters Type Name Description String key A unique key to pair value with. Int32 value The value to store Overrides AsyncSettingsRecorder.SetInt(String, Int32) Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetString(String, String) Store a key-value pair with string as value type. Declaration public override void SetString(string key, string value) Parameters Type Name Description String key A unique key to pair value with. String value The value to store Overrides AsyncSettingsRecorder.SetString(String, String) Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. Implements IAsyncSettingsRecorder IDisposable"
  },
  "api/OmiyaGames.Saves.AsyncSettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.AsyncSettingsRecorder.html",
    "title": "Class AsyncSettingsRecorder | Saves documentation",
    "keywords": "Class AsyncSettingsRecorder A implementation of IAsyncSettingsRecorder . Inheritance Object AsyncSettingsRecorder AsyncSettingsRecorderDecorator Implements IAsyncSettingsRecorder IDisposable Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class AsyncSettingsRecorder : ScriptableObject, IAsyncSettingsRecorder Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial draft. Methods DeleteAll() Deletes all the keys. Declaration public abstract WaitLoad DeleteAll() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Remarks This method will call all events listening to DeleteKey(String) . DeleteKey(String) Deletes a key and its associating value. Declaration public abstract WaitLoad DeleteKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Dispose() Declaration public virtual void Dispose() GetAllEvents() Grabs events listening to DeleteAll() . Declaration protected IEnumerable<IAsyncSettingsRecorder.OnKeyDeleted> GetAllEvents() Returns Type Description IEnumerable < IAsyncSettingsRecorder.OnKeyDeleted > True if one is found. GetBool(String, Boolean) Asynchronously gets a boolean value. Declaration public abstract WaitLoadValue<bool> GetBool(string key, bool defaultValue) Parameters Type Name Description String key The key associated with this value. Boolean defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Boolean > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetDateTimeUtc(String, DateTime) Asynchronously gets a value. Declaration public abstract WaitLoadValue<DateTime> GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key The key associated with this value. DateTime defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < DateTime > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetEnum<T>(String, T) Asynchronously gets an enum value. Declaration public abstract WaitLoadValue<T> GetEnum<T>(string key, T defaultValue) where T : Enum Parameters Type Name Description String key The key associated with this value. T defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue <T> A coroutine that indicates when it's finished loading, and provides the retrieved results. Type Parameters Name Description T An enumerator type. GetFloat(String, Single) Asynchronously gets a float value. Declaration public abstract WaitLoadValue<float> GetFloat(string key, float defaultValue) Parameters Type Name Description String key The key associated with this value. Single defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Single > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetInt(String, Int32) Asynchronously gets an integer value. Declaration public abstract WaitLoadValue<int> GetInt(string key, int defaultValue) Parameters Type Name Description String key The key associated with this value. Int32 defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Int32 > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetString(String, String) Asynchronously gets a string value. Declaration public abstract WaitLoadValue<string> GetString(string key, string defaultValue) Parameters Type Name Description String key The key associated with this value. String defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < String > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetTimeSpan(String, TimeSpan) Asynchronously gets a value. Declaration public abstract WaitLoadValue<TimeSpan> GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key The key associated with this value. TimeSpan defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < TimeSpan > A coroutine that indicates when it's finished loading, and provides the retrieved results. HasKey(String) Checks if this setting has a pairing with key. Declaration public abstract WaitLoadValue<bool> HasKey(string key) Parameters Type Name Description String key A unique key. Returns Type Description WaitLoadValue < Boolean > Coroutine indicating if there is a key or not at the end of operation. Save() Saves the entire settings. Declaration public abstract WaitLoad Save() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. SetBool(String, Boolean) Store a key-value pair with boolean as value type. Declaration public abstract void SetBool(string key, bool value) Parameters Type Name Description String key A unique key to pair value with. Boolean value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetDateTimeUtc(String, DateTime) Store a key-value pair with as value type. Declaration public abstract void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key A unique key to pair value with. DateTime value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetEnum<T>(String, T) Store a key-value pair with enum as value type. Declaration public abstract void SetEnum<T>(string key, T value) where T : Enum Parameters Type Name Description String key A unique key to pair value with. T value The value to store Type Parameters Name Description T An enumerator type. Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetFloat(String, Single) Store a key-value pair with float as value type. Declaration public abstract void SetFloat(string key, float value) Parameters Type Name Description String key A unique key to pair value with. Single value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetInt(String, Int32) Store a key-value pair with integer as value type. Declaration public abstract void SetInt(string key, int value) Parameters Type Name Description String key A unique key to pair value with. Int32 value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetString(String, String) Store a key-value pair with string as value type. Declaration public abstract void SetString(string key, string value) Parameters Type Name Description String key A unique key to pair value with. String value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetTimeSpan(String, TimeSpan) Store a key-value pair with as value type. Declaration public abstract void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key A unique key to pair value with. TimeSpan value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Adds an event listening to DeleteKey(String) and/or DeleteAll() . Declaration public void SubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Listen to a specific key. Set to empty string or null to listen to DeleteAll() event only. IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion. ToString() Declaration public override string ToString() Returns Type Description String TryGetEvents(String, out IAsyncSettingsRecorder.OnKeyDeleted) Grabs a corresponding event to a key. Declaration protected bool TryGetEvents(string key, out IAsyncSettingsRecorder.OnKeyDeleted events) Parameters Type Name Description String key IAsyncSettingsRecorder.OnKeyDeleted events Returns Type Description Boolean True if one is found. Remarks Any events held under an empty string key are intended to be called by DeleteAll() . UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Removes an event listener from DeleteKey(String) and/or DeleteAll() . Declaration public void UnsubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Unsubscribe to a specific key. Set to empty string or null to unsubscribe from DeleteAll() . IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion. Implements IAsyncSettingsRecorder IDisposable See Also IAsyncSettingsRecorder"
  },
  "api/OmiyaGames.Saves.AsyncSettingsRecorderDecorator.html": {
    "href": "api/OmiyaGames.Saves.AsyncSettingsRecorderDecorator.html",
    "title": "Class AsyncSettingsRecorderDecorator | Saves documentation",
    "keywords": "Class AsyncSettingsRecorderDecorator A decorator that implements a couple of AsyncSettingsRecorder methods by wrapping a couple of methods with other methods. Extending this class should reduce the amount of work necessary to implement an AsyncSettingsRecorder . Inheritance Object AsyncSettingsRecorder AsyncSettingsRecorderDecorator AsyncPlayerPrefsSettingsRecorder Implements IAsyncSettingsRecorder IDisposable Inherited Members AsyncSettingsRecorder.GetInt(String, Int32) AsyncSettingsRecorder.SetInt(String, Int32) AsyncSettingsRecorder.GetFloat(String, Single) AsyncSettingsRecorder.SetFloat(String, Single) AsyncSettingsRecorder.GetString(String, String) AsyncSettingsRecorder.SetString(String, String) AsyncSettingsRecorder.GetEnum<T>(String, T) AsyncSettingsRecorder.SetEnum<T>(String, T) AsyncSettingsRecorder.DeleteKey(String) AsyncSettingsRecorder.DeleteAll() AsyncSettingsRecorder.Save() AsyncSettingsRecorder.HasKey(String) AsyncSettingsRecorder.Dispose() AsyncSettingsRecorder.ToString() AsyncSettingsRecorder.SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.TryGetEvents(String, IAsyncSettingsRecorder.OnKeyDeleted) AsyncSettingsRecorder.GetAllEvents() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class AsyncSettingsRecorderDecorator : AsyncSettingsRecorder, IAsyncSettingsRecorder Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Initial draft. Methods GetBool(String, Boolean) Gets a bool from stored settings. This method is actually a wrapper of GetInt(string, int) . Declaration public override WaitLoadValue<bool> GetBool(string key, bool defaultValue) Parameters Type Name Description String key Boolean defaultValue Returns Type Description WaitLoadValue < Boolean > Overrides AsyncSettingsRecorder.GetBool(String, Boolean) GetDateTimeUtc(String, DateTime) Gets a DateTime (in UTC) from stored settings. This method is actually a wrapper of GetString(string, string) . Declaration public override WaitLoadValue<DateTime> GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key DateTime defaultValue Returns Type Description WaitLoadValue < DateTime > Overrides AsyncSettingsRecorder.GetDateTimeUtc(String, DateTime) GetEnum<TEnum>(String, TEnum) Gets an enum from stored settings. This method is actually a wrapper of GetInt(string, int) . Declaration public override WaitLoadValue<TEnum> GetEnum<TEnum>(string key, TEnum defaultValue) where TEnum : Enum Parameters Type Name Description String key TEnum defaultValue Returns Type Description WaitLoadValue <TEnum> Type Parameters Name Description TEnum Overrides OmiyaGames.Saves.AsyncSettingsRecorder.GetEnum<T>(System.String, T) GetTimeSpan(String, TimeSpan) Gets a TimeSpan from stored settings. This method is actually a wrapper of GetString(string, string) . Declaration public override WaitLoadValue<TimeSpan> GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key TimeSpan defaultValue Returns Type Description WaitLoadValue < TimeSpan > Overrides AsyncSettingsRecorder.GetTimeSpan(String, TimeSpan) SetBool(String, Boolean) Sets an bool in the stored settings. This method is actually a wrapper of SetInt(string, int) . Declaration public override void SetBool(string key, bool value) Parameters Type Name Description String key Boolean value Overrides AsyncSettingsRecorder.SetBool(String, Boolean) SetDateTimeUtc(String, DateTime) Sets a DateTime in the stored settings. Make sure the value is in UTC! This method is actually a wrapper of SetString(string, string) . Declaration public override void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key DateTime value Overrides AsyncSettingsRecorder.SetDateTimeUtc(String, DateTime) SetEnum<TEnum>(String, TEnum) Sets an enum in the stored settings. This method is actually a wrapper of SetInt(string, int) . Declaration public override void SetEnum<TEnum>(string key, TEnum value) where TEnum : Enum Parameters Type Name Description String key TEnum value Type Parameters Name Description TEnum Overrides OmiyaGames.Saves.AsyncSettingsRecorder.SetEnum<T>(System.String, T) SetTimeSpan(String, TimeSpan) Sets a TimeSpan in the stored settings. This method is actually a wrapper of SetString(string, string) . Declaration public override void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key TimeSpan value Overrides AsyncSettingsRecorder.SetTimeSpan(String, TimeSpan) Implements IAsyncSettingsRecorder IDisposable See Also AsyncSettingsRecorder"
  },
  "api/OmiyaGames.Saves.Clamp-1.html": {
    "href": "api/OmiyaGames.Saves.Clamp-1.html",
    "title": "Class Clamp<T> | Saves documentation",
    "keywords": "Class Clamp<T> Prevents a setting from going beyond the specified bounds. Inheritance Object Clamp<T> Implements PropertyStoredSettingsGenerator.ValueProcessor <> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class Clamp<T> : PropertyStoredSettingsGenerator<T>.ValueProcessor where T : IComparable Type Parameters Name Description T Methods Get(T, T) Declaration public static Clamp<T> Get(T min, T max) Parameters Type Name Description T min T max Returns Type Description Clamp <T> Process(T) Declaration public T Process(T value) Parameters Type Name Description T value Returns Type Description T Implements PropertyStoredSettingsGenerator<T>.ValueProcessor See Also Processor"
  },
  "api/OmiyaGames.Saves.Editor.BaseSaveObjectEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.BaseSaveObjectEditor.html",
    "title": "Class BaseSaveObjectEditor | Saves documentation",
    "keywords": "Class BaseSaveObjectEditor Abstract editor for any SaveObject . Inheritance Object BaseSaveObjectEditor SaveBoolEditor SaveComparableEditor<TValue, TSave, TTextField, TSliderField> SaveDateTimeEditor SaveEnumEditor<T> SaveEnumFlagsEditor<T> SaveStringEditor SaveTimeSpanEditor Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BaseSaveObjectEditor : UnityEditor.Editor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/20/2022 Author: Taro Omiya Initial draft. Fields UXML_DIRECTORY Declaration protected const string UXML_DIRECTORY = \"Packages/com.omiyagames.saves/Editor/SaveObjects/\" Field Value Type Description String Properties RootElement The root visual element generated by CreateInspectorGUI() . Declaration protected VisualElement RootElement { get; set; } Property Value Type Description VisualElement Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement FillContent(VisualElement) Fills the content section of editor. Declaration protected abstract void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! GetButtonText(SavesSettingsProvider.ContainsData, out String, out String, out Boolean) Declaration public static void GetButtonText(SavesSettingsProvider.ContainsData result, out string text, out string tooltip, out bool enableButton) Parameters Type Name Description SavesSettingsProvider.ContainsData result String text String tooltip Boolean enableButton GetStatusText(SavesSettingsProvider.ContainsData, out String, out String) Gets text and tooltip to display for status label. Declaration public static void GetStatusText(SavesSettingsProvider.ContainsData result, out string text, out string tooltip) Parameters Type Name Description SavesSettingsProvider.ContainsData result String text String tooltip SetupErrorHandlingDropDown(VisualElement, String, String) Helper method to setup a drop-down for the error handling enum value. Declaration protected void SetupErrorHandlingDropDown(VisualElement content, string variableName, string dropDownName) Parameters Type Name Description VisualElement content TODO String variableName TODO String dropDownName TODO"
  },
  "api/OmiyaGames.Saves.Editor.html": {
    "href": "api/OmiyaGames.Saves.Editor.html",
    "title": "Namespace OmiyaGames.Saves.Editor | Saves documentation",
    "keywords": "Namespace OmiyaGames.Saves.Editor Classes BaseSaveObjectEditor Abstract editor for any SaveObject . SaveBoolEditor Editor for SaveBool . SaveComparableEditor<TValue, TSave, TTextField, TSliderField> Abstract editor for SaveComparableValue<TValue, TSerialized> . SaveDateTimeEditor Editor for SaveDateTime . SaveEnumEditor<T> Editor for SaveEnum<T> . SaveEnumFlagsEditor<T> Editor for SaveEnumFlags<T> . SaveFloatEditor Editor for SaveFloat . SaveIntEditor Editor for SaveInt . SaveObjectInfoDrawer TODO SaveObjectMapDrawer for SaveObjectMap<T> . SavesSettingsBuilder Pre- and post-build script to add an instance of SavesSettings into the pre-loaded assets (and thus, build.) SavesSettingsEditor Editor for SavesSettings . Appears under inspector when selecting the asset. SavesSettingsProvider Editor for SavesSettings . Appears under the Project Settings window. SaveStringEditor Editor for SaveString . SaveTimeSpanEditor Editor for SaveTimeSpan . SingleLineObjectFieldDrawer for SingleLineObjectFieldAttribute . SupportedRecordersDrawer for . Enums SavesSettingsProvider.ContainsData"
  },
  "api/OmiyaGames.Saves.Editor.SaveBoolEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveBoolEditor.html",
    "title": "Class SaveBoolEditor | Saves documentation",
    "keywords": "Class SaveBoolEditor Editor for SaveBool . Inheritance Object BaseSaveObjectEditor SaveBoolEditor Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveBoolEditor : BaseSaveObjectEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/20/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveComparableEditor-4.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveComparableEditor-4.html",
    "title": "Class SaveComparableEditor<TValue, TSave, TTextField, TSliderField> | Saves documentation",
    "keywords": "Class SaveComparableEditor<TValue, TSave, TTextField, TSliderField> Abstract editor for SaveComparableValue<TValue, TSerialized> . Inheritance Object BaseSaveObjectEditor SaveComparableEditor<TValue, TSave, TTextField, TSliderField> SaveFloatEditor SaveIntEditor Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public abstract class SaveComparableEditor<TValue, TSave, TTextField, TSliderField> : BaseSaveObjectEditor where TValue : IComparable<TValue> where TSave : SaveComparableValue<TValue, TValue> where TTextField : TextValueField<TValue> where TSliderField : BaseSlider<TValue> Type Parameters Name Description TValue TSave TTextField TSliderField Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Properties UxmlPath The path to the UXML file with all the content setup Declaration protected abstract string UxmlPath { get; } Property Value Type Description String Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveDateTimeEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveDateTimeEditor.html",
    "title": "Class SaveDateTimeEditor | Saves documentation",
    "keywords": "Class SaveDateTimeEditor Editor for SaveDateTime . Inheritance Object BaseSaveObjectEditor SaveDateTimeEditor Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveDateTimeEditor : BaseSaveObjectEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveEnumEditor-1.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveEnumEditor-1.html",
    "title": "Class SaveEnumEditor<T> | Saves documentation",
    "keywords": "Class SaveEnumEditor<T> Editor for SaveEnum<T> . Inheritance Object BaseSaveObjectEditor SaveEnumEditor<T> Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveEnumEditor<T> : BaseSaveObjectEditor where T : Enum Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveEnumFlagsEditor-1.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveEnumFlagsEditor-1.html",
    "title": "Class SaveEnumFlagsEditor<T> | Saves documentation",
    "keywords": "Class SaveEnumFlagsEditor<T> Editor for SaveEnumFlags<T> . Inheritance Object BaseSaveObjectEditor SaveEnumFlagsEditor<T> Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveEnumFlagsEditor<T> : BaseSaveObjectEditor where T : Enum Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveFloatEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveFloatEditor.html",
    "title": "Class SaveFloatEditor | Saves documentation",
    "keywords": "Class SaveFloatEditor Editor for SaveFloat . Inheritance Object BaseSaveObjectEditor SaveComparableEditor < Single , SaveFloat , FloatField , Slider > SaveFloatEditor Inherited Members SaveComparableEditor<Single, SaveFloat, FloatField, Slider>.UxmlPath SaveComparableEditor<Single, SaveFloat, FloatField, Slider>.FillContent(VisualElement) BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.FillContent(VisualElement) BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveFloatEditor : SaveComparableEditor<float, SaveFloat, FloatField, Slider> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Properties UxmlPath The path to the UXML file with all the content setup Declaration protected override string UxmlPath { get; } Property Value Type Description String Overrides OmiyaGames.Saves.Editor.SaveComparableEditor<System.Single, OmiyaGames.Saves.SaveFloat, FloatField, Slider>.UxmlPath"
  },
  "api/OmiyaGames.Saves.Editor.SaveIntEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveIntEditor.html",
    "title": "Class SaveIntEditor | Saves documentation",
    "keywords": "Class SaveIntEditor Editor for SaveInt . Inheritance Object BaseSaveObjectEditor SaveComparableEditor < Int32 , SaveInt , IntegerField , SliderInt > SaveIntEditor Inherited Members SaveComparableEditor<Int32, SaveInt, IntegerField, SliderInt>.UxmlPath SaveComparableEditor<Int32, SaveInt, IntegerField, SliderInt>.FillContent(VisualElement) BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.FillContent(VisualElement) BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveIntEditor : SaveComparableEditor<int, SaveInt, IntegerField, SliderInt> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Properties UxmlPath The path to the UXML file with all the content setup Declaration protected override string UxmlPath { get; } Property Value Type Description String Overrides OmiyaGames.Saves.Editor.SaveComparableEditor<System.Int32, OmiyaGames.Saves.SaveInt, IntegerField, SliderInt>.UxmlPath"
  },
  "api/OmiyaGames.Saves.Editor.SaveObjectInfoDrawer.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveObjectInfoDrawer.html",
    "title": "Class SaveObjectInfoDrawer | Saves documentation",
    "keywords": "Class SaveObjectInfoDrawer TODO Inheritance Object SaveObjectInfoDrawer Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveObjectInfoDrawer : PropertyDrawer Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Initial verison. Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/OmiyaGames.Saves.Editor.SaveObjectMapDrawer.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveObjectMapDrawer.html",
    "title": "Class SaveObjectMapDrawer | Saves documentation",
    "keywords": "Class SaveObjectMapDrawer for SaveObjectMap<T> . Inheritance Object SaveObjectMapDrawer Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveObjectMapDrawer : Common.Editor.SingleChildDrawer Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Initial verison. Properties SerializedVariableName Declaration public override string SerializedVariableName { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.Editor.SavesSettingsBuilder.html": {
    "href": "api/OmiyaGames.Saves.Editor.SavesSettingsBuilder.html",
    "title": "Class SavesSettingsBuilder | Saves documentation",
    "keywords": "Class SavesSettingsBuilder Pre- and post-build script to add an instance of SavesSettings into the pre-loaded assets (and thus, build.) Inheritance Object SavesSettingsBuilder Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SavesSettingsBuilder : BaseSettingsBuilder<SavesSettings> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial verison. Properties ConfigName Declaration public override string ConfigName { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.Editor.SavesSettingsEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SavesSettingsEditor.html",
    "title": "Class SavesSettingsEditor | Saves documentation",
    "keywords": "Class SavesSettingsEditor Editor for SavesSettings . Appears under inspector when selecting the asset. Inheritance Object SavesSettingsEditor Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SavesSettingsEditor : SettingsEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial version Properties SidebarDisplayPath Declaration public override string SidebarDisplayPath { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.Editor.SavesSettingsProvider.ContainsData.html": {
    "href": "api/OmiyaGames.Saves.Editor.SavesSettingsProvider.ContainsData.html",
    "title": "Enum SavesSettingsProvider.ContainsData | Saves documentation",
    "keywords": "Enum SavesSettingsProvider.ContainsData Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public enum ContainsData Fields Name Description InvalidKey IsVersion No SettingsNotSetup Yes"
  },
  "api/OmiyaGames.Saves.Editor.SavesSettingsProvider.html": {
    "href": "api/OmiyaGames.Saves.Editor.SavesSettingsProvider.html",
    "title": "Class SavesSettingsProvider | Saves documentation",
    "keywords": "Class SavesSettingsProvider Editor for SavesSettings . Appears under the Project Settings window. Inheritance Object SavesSettingsProvider Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SavesSettingsProvider : BaseSettingsEditor<SavesSettings> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial verison. Constructors SavesSettingsProvider(String, IEnumerable<String>) Constructs a project-scoped . Declaration public SavesSettingsProvider(string path, IEnumerable<string> keywords) Parameters Type Name Description String path IEnumerable < String > keywords Properties AddressableGroupName Declaration public override string AddressableGroupName { get; } Property Value Type Description String AddressableName Declaration public override string AddressableName { get; } Property Value Type Description String ConfigName Declaration public override string ConfigName { get; } Property Value Type Description String DefaultSettingsFileName Declaration public override string DefaultSettingsFileName { get; } Property Value Type Description String HeaderText Declaration public override string HeaderText { get; } Property Value Type Description String HelpUrl Declaration public override string HelpUrl { get; } Property Value Type Description String UxmlPath Declaration public override string UxmlPath { get; } Property Value Type Description String Methods AddSaveData(SaveObject[]) Adds new save data slots in save settings. Declaration public static int AddSaveData(params SaveObject[] newData) Parameters Type Name Description SaveObject [] newData All the data to be added into settings. Returns Type Description Int32 Number of save data successfully added. ContainsSaveData(SaveObject) Helper function for editor in adding new save data slots in save settings. Declaration public static SavesSettingsProvider.ContainsData ContainsSaveData(SaveObject checkData) Parameters Type Name Description SaveObject checkData Returns Type Description SavesSettingsProvider.ContainsData Exceptions Type Condition NotImplementedException If this function is not called from the editor. CreateSettingsProvider() Registers this . Declaration public static SettingsProvider CreateSettingsProvider() Returns Type Description SettingsProvider CustomizeEditSettingsTree(VisualElement, SerializedObject) Declaration protected override VisualElement CustomizeEditSettingsTree(VisualElement returnTree, SerializedObject settingsProperty) Parameters Type Name Description VisualElement returnTree SerializedObject settingsProperty Returns Type Description VisualElement RemoveSaveData(SaveObject[]) Removes existing save data slots from save settings. Declaration public static int RemoveSaveData(params SaveObject[] removeData) Parameters Type Name Description SaveObject [] removeData All the data to be removed from settings. Returns Type Description Int32"
  },
  "api/OmiyaGames.Saves.Editor.SaveStringEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveStringEditor.html",
    "title": "Class SaveStringEditor | Saves documentation",
    "keywords": "Class SaveStringEditor Editor for SaveString . Inheritance Object BaseSaveObjectEditor SaveStringEditor Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveStringEditor : BaseSaveObjectEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/20/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SaveTimeSpanEditor.html": {
    "href": "api/OmiyaGames.Saves.Editor.SaveTimeSpanEditor.html",
    "title": "Class SaveTimeSpanEditor | Saves documentation",
    "keywords": "Class SaveTimeSpanEditor Editor for SaveTimeSpan . Inheritance Object BaseSaveObjectEditor SaveTimeSpanEditor Inherited Members BaseSaveObjectEditor.UXML_DIRECTORY BaseSaveObjectEditor.RootElement BaseSaveObjectEditor.CreateInspectorGUI() BaseSaveObjectEditor.SetupErrorHandlingDropDown(VisualElement, String, String) BaseSaveObjectEditor.GetStatusText(SavesSettingsProvider.ContainsData, String, String) BaseSaveObjectEditor.GetButtonText(SavesSettingsProvider.ContainsData, String, String, Boolean) Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SaveTimeSpanEditor : BaseSaveObjectEditor Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Methods FillContent(VisualElement) Fills the content section of editor. Declaration protected override void FillContent(VisualElement content) Parameters Type Name Description VisualElement content The blank content section. Add s in it! Overrides BaseSaveObjectEditor.FillContent(VisualElement)"
  },
  "api/OmiyaGames.Saves.Editor.SingleLineObjectFieldDrawer.html": {
    "href": "api/OmiyaGames.Saves.Editor.SingleLineObjectFieldDrawer.html",
    "title": "Class SingleLineObjectFieldDrawer | Saves documentation",
    "keywords": "Class SingleLineObjectFieldDrawer for SingleLineObjectFieldAttribute . Inheritance Object SingleLineObjectFieldDrawer Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SingleLineObjectFieldDrawer : PropertyDrawer Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/20/2022 Author: Taro Omiya Initial verison. Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/OmiyaGames.Saves.Editor.SupportedRecordersDrawer.html": {
    "href": "api/OmiyaGames.Saves.Editor.SupportedRecordersDrawer.html",
    "title": "Class SupportedRecordersDrawer | Saves documentation",
    "keywords": "Class SupportedRecordersDrawer for . Inheritance Object SupportedRecordersDrawer Namespace : OmiyaGames.Saves.Editor Assembly : cs.temp.dll.dll Syntax public class SupportedRecordersDrawer : PropertyDrawer Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 2/6/2022 Author: Taro Omiya Initial version. Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/OmiyaGames.Saves.ErrorHandling.html": {
    "href": "api/OmiyaGames.Saves.ErrorHandling.html",
    "title": "Enum ErrorHandling | Saves documentation",
    "keywords": "Enum ErrorHandling Indicates the loading state of a coroutine. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public enum ErrorHandling Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/19/2022 Author: Taro Omiya Initial draft. Fields Name Description HaltLogError Log an error, and don't proceed. NumberOfOptions Number of potential options. ProceedLogError Log an error, but continue proceeding. ProceedLogInfo Log the issue, and continue proceeding. ProceedLogWarning Log a warning, but continue proceeding. Silence Proceed without logging."
  },
  "api/OmiyaGames.Saves.FloatRecord.html": {
    "href": "api/OmiyaGames.Saves.FloatRecord.html",
    "title": "Class FloatRecord | Saves documentation",
    "keywords": "Class FloatRecord Stores float Inheritance Object IRecord < Single > FloatRecord Inherited Members IRecord<Single>.Divider IRecord<Single>.Name IRecord<Single>.Record IRecord<Single>.DateAchievedUtc IRecord<Single>.ToString() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class FloatRecord : IRecord<float> Constructors FloatRecord(Single, String) Declaration public FloatRecord(float newRecord, string newName) Parameters Type Name Description Single newRecord String newName FloatRecord(String, Int32, IRecord<Single>.TryConvertOldRecord) Declaration public FloatRecord(string pastRecord, int appVersion, IRecord<float>.TryConvertOldRecord converter = null) Parameters Type Name Description String pastRecord Int32 appVersion IRecord.TryConvertOldRecord <> converter Methods ConvertRecordToString() Declaration protected override string ConvertRecordToString() Returns Type Description String Overrides OmiyaGames.Saves.IRecord<System.Single>.ConvertRecordToString() ParseRecord(String, Int32, IRecord<Single>.TryConvertOldRecord) Declaration protected override void ParseRecord(string record, int appVersion, IRecord<float>.TryConvertOldRecord converter) Parameters Type Name Description String record Int32 appVersion IRecord.TryConvertOldRecord <> converter Overrides OmiyaGames.Saves.IRecord<System.Single>.ParseRecord(System.String, System.Int32, OmiyaGames.Saves.IRecord.TryConvertOldRecord<>) See Also GameSettings"
  },
  "api/OmiyaGames.Saves.GameSettings.AppStatus.html": {
    "href": "api/OmiyaGames.Saves.GameSettings.AppStatus.html",
    "title": "Enum GameSettings.AppStatus | Saves documentation",
    "keywords": "Enum GameSettings.AppStatus Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public enum AppStatus Fields Name Description FirstTimeOpened RecentlyUpdated Replaying"
  },
  "api/OmiyaGames.Saves.GameSettings.html": {
    "href": "api/OmiyaGames.Saves.GameSettings.html",
    "title": "Class GameSettings | Saves documentation",
    "keywords": "Class GameSettings This code is auto-generated. All changes will be overwritten! Inheritance Object GameSettings Implements Global.ISingletonScript Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class GameSettings : Global.ISingletonScript Fields DefaultSettings Declaration public static readonly ISettingsRecorder DefaultSettings Field Value Type Description ISettingsRecorder VersionKey Declaration public const string VersionKey = \"AppVersion\" Field Value Type Description String Properties AppVersion The latest version number stored in settings. This is the size of OmiyaGames.Saves.GameSettings.AllSettingsVersions Declaration public int AppVersion { get; } Property Value Type Description Int32 CameraSmoothFactor The amount to apply the camera smoothing. Zero indicates instant-snapping to mouse. Declaration public float CameraSmoothFactor { get; } Property Value Type Description Single CustomTimeScale The default global time scale for the game. Declaration public float CustomTimeScale { get; } Property Value Type Description Single CustomTimeScaleOption The smoothing factor for making the camera follow the mouse movement. A value between 0 and 1. The lower the value, the more tightly it tracks the mouse movement. Declaration public float CustomTimeScaleOption { get; set; } Property Value Type Description Single DefaultLeaderboardUserScope Declaration public static UserScope DefaultLeaderboardUserScope { get; } Property Value Type Description UserScope DefaultNumLevelsUnlocked Default number of levels unlocked. Declaration public int DefaultNumLevelsUnlocked { get; } Property Value Type Description Int32 HighScores List of highest scores Declaration public ISortedRecords<int> HighScores { get; } Property Value Type Description ISortedRecords < Int32 > IsBloomEffectEnabled If true, enables bloom graphic effects. Declaration public bool IsBloomEffectEnabled { get; set; } Property Value Type Description Boolean IsCameraShakesEnabled If true, enables bloom graphic effects. Declaration public bool IsCameraShakesEnabled { get; set; } Property Value Type Description Boolean IsCustomTimeScaleEnabled If true, enables smooth camera controls. Declaration public bool IsCustomTimeScaleEnabled { get; set; } Property Value Type Description Boolean IsHeadBobbingEnabled If true, enables head bobbing camera effect. Declaration public bool IsHeadBobbingEnabled { get; } Property Value Type Description Boolean IsHeadBobbingOptionEnabled The stored value for the head bobbing checkbox in the Graphics options menu. Declaration public bool IsHeadBobbingOptionEnabled { get; set; } Property Value Type Description Boolean IsInvincibilityModeEnabled If true, enables invincibility mode; this accessibility feature prevents the player's health from decreasing! Declaration public bool IsInvincibilityModeEnabled { get; set; } Property Value Type Description Boolean IsKeyboardAxisSensitivitySplit If true, splits the keyboard's X- and Y-axis' sensitivity Declaration public bool IsKeyboardAxisSensitivitySplit { get; set; } Property Value Type Description Boolean IsKeyboardXAxisInverted If true, inverts the keyboard's X-axis. Declaration public bool IsKeyboardXAxisInverted { get; set; } Property Value Type Description Boolean IsKeyboardYAxisInverted If true, inverts the keyboard's Y-axis. Declaration public bool IsKeyboardYAxisInverted { get; set; } Property Value Type Description Boolean IsMotionBlursEnabled If true, enables motion blur graphic effects. Declaration public bool IsMotionBlursEnabled { get; set; } Property Value Type Description Boolean IsMouseAxisSensitivitySplit If true, splits the mouse's X- and Y-axis' sensitivity Declaration public bool IsMouseAxisSensitivitySplit { get; set; } Property Value Type Description Boolean IsMouseXAxisInverted If true, inverts the keyboard's X-axis. Declaration public bool IsMouseXAxisInverted { get; set; } Property Value Type Description Boolean IsMouseYAxisInverted If true, inverts the keyboard's Y-axis. Declaration public bool IsMouseYAxisInverted { get; set; } Property Value Type Description Boolean IsMusicMuted Whether the music is muted or not. Declaration public bool IsMusicMuted { get; set; } Property Value Type Description Boolean IsScreenFlashesEnabled If true, enables flashing graphic effects. Declaration public bool IsScreenFlashesEnabled { get; set; } Property Value Type Description Boolean IsScrollWheelInverted If true, inverts the mouse' scroll wheel. Declaration public bool IsScrollWheelInverted { get; set; } Property Value Type Description Boolean IsSmoothCameraEnabled If true, enables smooth camera controls. Declaration public bool IsSmoothCameraEnabled { get; set; } Property Value Type Description Boolean IsSoundMuted Whether the sound is muted or not. Declaration public bool IsSoundMuted { get; set; } Property Value Type Description Boolean KeyboardXAxisSensitivity The keyboard's X-axis' sensitivity. A value between 0 and 1. Declaration public float KeyboardXAxisSensitivity { get; set; } Property Value Type Description Single KeyboardYAxisSensitivity The keyboard's Y-axis' sensitivity. A value between 0 and 1. This value isn't used if IsKeyboardAxisSensitivitySplit is false. Declaration public float KeyboardYAxisSensitivity { get; set; } Property Value Type Description Single Language The user-chosen language Declaration public string Language { get; set; } Property Value Type Description String LastEnteredName The name the player entered last time they got a new high score. Used as a convenience feature for players to enter their name more quickly on repeated playthroughs. Declaration public string LastEnteredName { get; set; } Property Value Type Description String MouseXAxisSensitivity The mouse's X-axis' sensitivity. A value between 0 and 1. Declaration public float MouseXAxisSensitivity { get; set; } Property Value Type Description Single MouseYAxisSensitivity The keyboard's Y-axis' sensitivity. A value between 0 and 1. This value isn't used if IsKeyboardAxisSensitivitySplit is false. Declaration public float MouseYAxisSensitivity { get; set; } Property Value Type Description Single MusicVolume The stored music volume, between 0 and 1. Declaration public float MusicVolume { get; set; } Property Value Type Description Single NumberOfTimesAppOpened The number of times the player opened this game. Declaration public int NumberOfTimesAppOpened { get; set; } Property Value Type Description Int32 NumLevelsUnlocked The number of levels unlocked. Declaration public int NumLevelsUnlocked { get; set; } Property Value Type Description Int32 ScrollWheelSensitivity The mouse' scroll wheel's sensitivity. A value between 0 and 1. Declaration public float ScrollWheelSensitivity { get; set; } Property Value Type Description Single Settings Declaration public virtual ISettingsRecorder Settings { get; } Property Value Type Description ISettingsRecorder SmoothCameraFactorOption The smoothing factor for making the camera follow the mouse movement. A value between 0 and 1. The lower the value, the more tightly it tracks the mouse movement. Declaration public float SmoothCameraFactorOption { get; set; } Property Value Type Description Single SoundVolume The stored sound volume, between 0 and 1. Declaration public float SoundVolume { get; set; } Property Value Type Description Single Status Declaration public GameSettings.AppStatus Status { get; } Property Value Type Description GameSettings.AppStatus TextSizeMultiplier Multiplier on how much the font size of a text should change. Declaration public float TextSizeMultiplier { get; set; } Property Value Type Description Single TopScore Gets the top score from HighScores Declaration public IRecord<int> TopScore { get; } Property Value Type Description IRecord < Int32 > TotalPlayTime How long the player played this game. Declaration public TimeSpan TotalPlayTime { get; } Property Value Type Description TimeSpan Methods ClearSettings() Declaration public void ClearSettings() ClearSettings(Boolean) Declaration protected void ClearSettings(bool runEvent) Parameters Type Name Description Boolean runEvent RetrieveFromSettings() Declaration public void RetrieveFromSettings() RetrieveFromSettings(Boolean) Declaration protected void RetrieveFromSettings(bool runEvent) Parameters Type Name Description Boolean runEvent SaveSettings() Declaration public void SaveSettings() SaveSettings(Boolean) Declaration protected void SaveSettings(bool runEvent) Parameters Type Name Description Boolean runEvent SceneAwake() Declaration public override void SceneAwake() SingletonAwake() Declaration public override void SingletonAwake() Events OnAfterClearSettings Declaration public event Action<GameSettings> OnAfterClearSettings Event Type Type Description Action < GameSettings > OnAfterRetrieveSettings Declaration public event Action<GameSettings> OnAfterRetrieveSettings Event Type Type Description Action < GameSettings > OnAfterSaveSettings Declaration public event Action<GameSettings> OnAfterSaveSettings Event Type Type Description Action < GameSettings > OnBeforeClearSettings Declaration public event Action<GameSettings> OnBeforeClearSettings Event Type Type Description Action < GameSettings > OnBeforeRetrieveSettings Declaration public event Action<GameSettings> OnBeforeRetrieveSettings Event Type Type Description Action < GameSettings > OnBeforeSaveSettings Declaration public event Action<GameSettings> OnBeforeSaveSettings Event Type Type Description Action < GameSettings > Implements Global.ISingletonScript See Also ISettingsRecorder"
  },
  "api/OmiyaGames.Saves.GameSettingsGenerator.html": {
    "href": "api/OmiyaGames.Saves.GameSettingsGenerator.html",
    "title": "Class GameSettingsGenerator | Saves documentation",
    "keywords": "Class GameSettingsGenerator A list of helper methods that writes all the ISettingsVersion and the latest IStoredSetting into a single, readable C# file. Inheritance Object GameSettingsGenerator Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public static class GameSettingsGenerator Fields Tabs Declaration public const string Tabs = \" \" Field Value Type Description String Methods WriteLine(TextWriter, Int32, Char) Declaration public static void WriteLine(TextWriter writer, int numTabs, char letter) Parameters Type Name Description TextWriter writer Int32 numTabs Char letter WriteLine(TextWriter, Int32, String) Declaration public static void WriteLine(TextWriter writer, int numTabs, string line) Parameters Type Name Description TextWriter writer Int32 numTabs String line WriteStartOfLine(TextWriter, Int32, Char) Declaration public static void WriteStartOfLine(TextWriter writer, int numTabs, char letter) Parameters Type Name Description TextWriter writer Int32 numTabs Char letter WriteStartOfLine(TextWriter, Int32, String) Declaration public static void WriteStartOfLine(TextWriter writer, int numTabs, string line) Parameters Type Name Description TextWriter writer Int32 numTabs String line WriteTabs(TextWriter, Int32) Declaration public static void WriteTabs(TextWriter writer, int numTabs) Parameters Type Name Description TextWriter writer Int32 numTabs See Also GameSettings ISettingsVersion GameSettings ISettingsVersion"
  },
  "api/OmiyaGames.Saves.GeneratePropertyEventArgs.html": {
    "href": "api/OmiyaGames.Saves.GeneratePropertyEventArgs.html",
    "title": "Class GeneratePropertyEventArgs | Saves documentation",
    "keywords": "Class GeneratePropertyEventArgs Helper class that has a couple of built-in stuff to implement a IGenerator more easily. Inheritance Object GeneratePropertyEventArgs Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class GeneratePropertyEventArgs : EventArgs Constructors GeneratePropertyEventArgs(TextWriter, Int32, String, Int32) Declaration public GeneratePropertyEventArgs(TextWriter writer, int numTabs, string instanceName, int versionArrayIndex) Parameters Type Name Description TextWriter writer Int32 numTabs String instanceName Int32 versionArrayIndex Fields instanceName Declaration public readonly string instanceName Field Value Type Description String versionArrayIndex Declaration public readonly int versionArrayIndex Field Value Type Description Int32 writer Declaration public readonly TextWriter writer Field Value Type Description TextWriter Properties numTabs Declaration public int numTabs { get; set; } Property Value Type Description Int32 Methods WriteSingleLine(Boolean, String) Declaration public void WriteSingleLine(bool withReturn, string variableOrFunction) Parameters Type Name Description Boolean withReturn String variableOrFunction WriteTabs() Declaration public void WriteTabs()"
  },
  "api/OmiyaGames.Saves.GeneratorDecorator.html": {
    "href": "api/OmiyaGames.Saves.GeneratorDecorator.html",
    "title": "Class GeneratorDecorator | Saves documentation",
    "keywords": "Class GeneratorDecorator Helper class that has a couple of built-in stuff to implement a IGenerator more easily. Inheritance Object GeneratorDecorator PropertyGenerator PropertyStoredSettingsGenerator<T> Implements IGenerator IUniqueSetting Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class GeneratorDecorator : IGenerator, IUniqueSetting Properties GetterCode Declaration public abstract GeneratorDecorator.PropertyWriter GetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter GetterScope Declaration public AccessModifier GetterScope { get; set; } Property Value Type Description AccessModifier Key Declaration public virtual string Key { get; } Property Value Type Description String PropertyName Declaration public abstract string PropertyName { get; set; } Property Value Type Description String SetterCode Declaration public abstract GeneratorDecorator.PropertyWriter SetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter SetterScope Declaration public AccessModifier SetterScope { get; set; } Property Value Type Description AccessModifier TooltipDocumentation Declaration public string[] TooltipDocumentation { get; set; } Property Value Type Description String [] TypeName Declaration public abstract string TypeName { get; } Property Value Type Description String Methods CreatePropertyWriter(String, String) Declaration public static GeneratorDecorator.PropertyWriter CreatePropertyWriter(string variableName, string propertyName) Parameters Type Name Description String variableName String propertyName Returns Type Description GeneratorDecorator.PropertyWriter Implements IGenerator IUniqueSetting"
  },
  "api/OmiyaGames.Saves.GeneratorDecorator.PropertyWriter.html": {
    "href": "api/OmiyaGames.Saves.GeneratorDecorator.PropertyWriter.html",
    "title": "Delegate GeneratorDecorator.PropertyWriter | Saves documentation",
    "keywords": "Delegate GeneratorDecorator.PropertyWriter Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate void PropertyWriter(GeneratorDecorator source, GeneratePropertyEventArgs args); Parameters Type Name Description GeneratorDecorator source GeneratePropertyEventArgs args"
  },
  "api/OmiyaGames.Saves.GeneratorHelper.html": {
    "href": "api/OmiyaGames.Saves.GeneratorHelper.html",
    "title": "Class GeneratorHelper | Saves documentation",
    "keywords": "Class GeneratorHelper Helper class containing a series of methods to help generate code. Inheritance Object GeneratorHelper Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public static class GeneratorHelper Methods ConvertKeyToPropertyName(String, out String) Declaration public static string ConvertKeyToPropertyName(string key, out string errorMessage) Parameters Type Name Description String key String errorMessage Returns Type Description String CorrectedTypeName(Type) Declaration public static string CorrectedTypeName(Type type) Parameters Type Name Description Type type Returns Type Description String IsPropertyNameValid(String, out String) Declaration public static bool IsPropertyNameValid(string propertyName, out string errorMessage) Parameters Type Name Description String propertyName String errorMessage Returns Type Description Boolean IsTypeNameValid(String, out String) Declaration public static bool IsTypeNameValid(string typeName, out string errorMessage) Parameters Type Name Description String typeName String errorMessage Returns Type Description Boolean WriteCodeToInstance(IStoredSettingGenerator, StringBuilder, Int32, Boolean) Declaration public static void WriteCodeToInstance(IStoredSettingGenerator generator, StringBuilder writer, int versionArrayIndex, bool writeGenerator) Parameters Type Name Description IStoredSettingGenerator generator StringBuilder writer Int32 versionArrayIndex Boolean writeGenerator WriteCodeToInstance(IStoredSettingGenerator, TextWriter, Int32, Boolean) Declaration public static void WriteCodeToInstance(IStoredSettingGenerator generator, TextWriter writer, int versionArrayIndex, bool writeGenerator) Parameters Type Name Description IStoredSettingGenerator generator TextWriter writer Int32 versionArrayIndex Boolean writeGenerator WriteCodeToInstance(StringBuilder, Int32, Type) Declaration public static void WriteCodeToInstance(StringBuilder writer, int versionArrayIndex, Type settingsVersionType) Parameters Type Name Description StringBuilder writer Int32 versionArrayIndex Type settingsVersionType WriteCodeToInstance(TextWriter, Int32, Type) Declaration public static void WriteCodeToInstance(TextWriter writer, int versionArrayIndex, Type settingsVersionType) Parameters Type Name Description TextWriter writer Int32 versionArrayIndex Type settingsVersionType"
  },
  "api/OmiyaGames.Saves.html": {
    "href": "api/OmiyaGames.Saves.html",
    "title": "Namespace OmiyaGames.Saves | Saves documentation",
    "keywords": "Namespace OmiyaGames.Saves Classes AddAudioSettings Adds audio settings to GameSettings . AddHighScores Adds high score settings to GameSettings . AddLanguageSettings Adds language settings to GameSettings . AddLocalAnalytics Adds local analytics (like how long the player played, how many levels they have unlocked, etc.) to GameSettings . AddOptions Adds Options settings to GameSettings . AsyncCompositeSettingsRecorder TODO. AsyncPlayerPrefsSettingsRecorder AsyncSettingsRecorder A implementation of IAsyncSettingsRecorder . AsyncSettingsRecorderDecorator A decorator that implements a couple of AsyncSettingsRecorder methods by wrapping a couple of methods with other methods. Extending this class should reduce the amount of work necessary to implement an AsyncSettingsRecorder . Clamp<T> Prevents a setting from going beyond the specified bounds. FloatRecord Stores float GameSettings This code is auto-generated. All changes will be overwritten! GameSettingsGenerator A list of helper methods that writes all the ISettingsVersion and the latest IStoredSetting into a single, readable C# file. GeneratePropertyEventArgs Helper class that has a couple of built-in stuff to implement a IGenerator more easily. GeneratorDecorator Helper class that has a couple of built-in stuff to implement a IGenerator more easily. GeneratorHelper Helper class containing a series of methods to help generate code. IntRecord Stores int information IRecord<T> Stores a record that can be stored in GameSettings . ISortedRecords<T> Stores a sorted list of IRecord<T> with a limited capacity. Useful for keeping track of high scores. ISortedRecords<T>.AsecendingOrder ISortedRecords<T>.DescendingOrder KeyDeletedEventArgs Event arguments for . LoadFinishedCompositeEventArgs<T> TODO. LoadFinishedEventArgs Event arguments for . LoadValueFinishedEventArgs<T> Event arguments for . MaxCap<T> Prevents a setting from becoming larger than the specified bound. MinCap<T> Prevents a setting from becoming smaller than the specified bound. NamespaceGeneratorArgs Arguments providing a collection of Namespaces. PlayerPrefsSettingsRecorder An implementation of ISettingsRecorder using PlayerPrefs . PropertyGenerator Abstract class that helps generate a property in GameSettings . PropertyStoredSettingsGenerator<T> Abstract class that helps generate a property in GameSettings . SaveBool Interface for loading a float from SaveComparableValue<TValue, TSerialized> Helper abstract class with common methods already defined for most comparable variable types. SaveDateTime Interface for loading a from IAsyncSettingsRecorder SaveEnum<T> Interface for loading a enum from a IAsyncSettingsRecorder . SaveEnumFlags<T> Interface for loading a enum from a IAsyncSettingsRecorder . Meant for enums with FlagsAttribute . SaveFloat Interface for loading a float from SaveInt Interface for loading an integer from IAsyncSettingsRecorder SaveObject Interface for implementing saving and loading a value. SaveObjectComparer TODO SaveObjectInfoAttribute Attribute for showing more helper functionality to SaveObject SaveObjectMap<T> A collection of SaveObject s. If used as an inspector-exposed variable, Setup() must be called before using this map. SaveSingleValue<TValue, TSerialized> Helper abstract class with common methods already defined for most situations. SaveSlot Collection of SaveObjects, acting like a save slot. SavesManager A manager file that configures and loads SaveObject s on Setup(Boolean) . Allows retrieving SaveObject by their keys. Handles global Save() . SavesSettings Scriptable object with settings info. SaveString Interface for loading a string from SavesUpgrader A implementation of ISavesUpgrader . SaveTimeSpan Interface for loading a from IAsyncSettingsRecorder SettingsGeneratorArgs Arguments providing a collection of IGenerator SettingsRecorderDecorator A decorator that implements a couple of ISettingsRecorder methods by wrapping a couple of methods with other methods. Extending this class should reduce the amount of work necessary to implement an ISettingsRecorder . SettingsVersionGeneratorDecorator SingleLineObjectFieldAttribute Attribute for making object fields take up only a single line, taking up the full width (no label.) Useful for lists of objects. SortedFloatRecords Stores a sorted list of FloatRecord with a limited capacity. Useful for keeping track of high scores. SortedIntRecords Stores a sorted list of IntRecord with a limited capacity. Useful for keeping track of high scores. SortedRecordSettingGenerator<T> Generates a ISortedRecords<T> property in GameSettings . StoredBoolGenerator Generates a bool property in GameSettings . StoredDateTimeUtcGenerator Generates a (in UTC) property in GameSettings . StoredEnumGenerator<T> Generates an enum property in GameSettings . StoredFloatGenerator Generates a float property in GameSettings . StoredIntGenerator Generates an int property in GameSettings . StoredPlayTimeGenerator Generates a property in GameSettings , providing how long the player has played the game. StoredStringGenerator Generates a string property in GameSettings . StoredTimeSpanGenerator Generates a property in GameSettings . VersionGeneratorArgs Arguments providing a collection of ISettingsVersionGenerator , sorted by version number in ascending order. WaitLoad An abstract coroutine that waits for a loading operation to finish. Contains a property indicating if the operation succeeded or not. WaitLoadBool Wraps WaitLoadValue<int> , converting to a boolean. WaitLoadComposite TODO. WaitLoadConvertValue<TNew, TOld> Wrapper class that converts a Result from TOld to TNew . WaitLoadDateTime Wraps WaitLoadValue<string> , converting to a . WaitLoadEnum<T> Wraps WaitLoadValue<int> , converting to an enum. WaitLoadFlags A coroutine that waits for all listed flags to finish loading. WaitLoadImmediate A coroutine that immediately finishes with success status. WaitLoadTimeSpan Wraps WaitLoadValue<string> , converting to a . WaitLoadValue<T> An abstract coroutine that waits for a loading operation to finish. Contains a property indicating if the operation succeeded or not, as well as the retrieved value if successful. WaitLoadValueImmediate<T> Structs SavesSettings.SupportedRecorder SettingsGeneratorArgs.SingleSettingsInfo Interfaces IAsyncSettingsRecorder An interface for storing settings. Useful for indicating where a game's settings should be saved. IGenerator Interface that generates a property. ISavesUpgrader An interface for upgrading stored settings. ISettingsRecorder An interface for storing settings. Useful for indicating where a game's settings should be saved. ISettingsVersion Interface that represents a version of saved settings by either adding or modifying on top of settings stored in previous ISettingsVersion (classes with lower Version ). Also where one can retrieve an IGenerator for that version. Anything that implements this interface must be a class . ISettingsVersionGenerator Interface that generates an ISettingsVersion for GameSettings . IStoredSetting Interface that saves and retrieves settings. IStoredSettingGenerator Interface that generates a settings property. IUniqueSetting Interface with Key . PropertyStoredSettingsGenerator<T>.ValueProcessor Enums AccessModifier Enumerator indicating the access permissions of a generated property. ErrorHandling Indicates the loading state of a coroutine. GameSettings.AppStatus LoadState Indicates the loading state of a coroutine. SaveState Indicates the state of this object. Delegates GeneratorDecorator.PropertyWriter IAsyncSettingsRecorder.OnKeyDeleted TODO IRecord<T>.TryConvertOldRecord PropertyStoredSettingsGenerator<T>.ConvertOldSettings PropertyStoredSettingsGenerator<T>.ValueChange WaitLoad.LoadingFinished TODO"
  },
  "api/OmiyaGames.Saves.IAsyncSettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.IAsyncSettingsRecorder.html",
    "title": "Interface IAsyncSettingsRecorder | Saves documentation",
    "keywords": "Interface IAsyncSettingsRecorder An interface for storing settings. Useful for indicating where a game's settings should be saved. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface IAsyncSettingsRecorder Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Initial draft. Methods DeleteAll() Deletes all the keys. Declaration WaitLoad DeleteAll() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Remarks This method will call all events listening to DeleteKey(String) . DeleteKey(String) Deletes a key and its associating value. Declaration WaitLoad DeleteKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. GetBool(String, Boolean) Asynchronously gets a boolean value. Declaration WaitLoadValue<bool> GetBool(string key, bool defaultValue) Parameters Type Name Description String key The key associated with this value. Boolean defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Boolean > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetDateTimeUtc(String, DateTime) Asynchronously gets a value. Declaration WaitLoadValue<DateTime> GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key The key associated with this value. DateTime defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < DateTime > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetEnum<T>(String, T) Asynchronously gets an enum value. Declaration WaitLoadValue<T> GetEnum<T>(string key, T defaultValue) where T : Enum Parameters Type Name Description String key The key associated with this value. T defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue <T> A coroutine that indicates when it's finished loading, and provides the retrieved results. Type Parameters Name Description T An enumerator type. GetFloat(String, Single) Asynchronously gets a float value. Declaration WaitLoadValue<float> GetFloat(string key, float defaultValue) Parameters Type Name Description String key The key associated with this value. Single defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Single > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetInt(String, Int32) Asynchronously gets an integer value. Declaration WaitLoadValue<int> GetInt(string key, int defaultValue) Parameters Type Name Description String key The key associated with this value. Int32 defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < Int32 > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetString(String, String) Asynchronously gets a string value. Declaration WaitLoadValue<string> GetString(string key, string defaultValue) Parameters Type Name Description String key The key associated with this value. String defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < String > A coroutine that indicates when it's finished loading, and provides the retrieved results. GetTimeSpan(String, TimeSpan) Asynchronously gets a value. Declaration WaitLoadValue<TimeSpan> GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key The key associated with this value. TimeSpan defaultValue The default value if a value associated with key is not found. Returns Type Description WaitLoadValue < TimeSpan > A coroutine that indicates when it's finished loading, and provides the retrieved results. HasKey(String) Checks if this setting has a pairing with key. Declaration WaitLoadValue<bool> HasKey(string key) Parameters Type Name Description String key A unique key. Returns Type Description WaitLoadValue < Boolean > Coroutine indicating if there is a key or not at the end of operation. Save() Saves the entire settings. Declaration WaitLoad Save() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. SetBool(String, Boolean) Store a key-value pair with boolean as value type. Declaration void SetBool(string key, bool value) Parameters Type Name Description String key A unique key to pair value with. Boolean value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetDateTimeUtc(String, DateTime) Store a key-value pair with as value type. Declaration void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key A unique key to pair value with. DateTime value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetEnum<T>(String, T) Store a key-value pair with enum as value type. Declaration void SetEnum<T>(string key, T value) where T : Enum Parameters Type Name Description String key A unique key to pair value with. T value The value to store Type Parameters Name Description T An enumerator type. Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetFloat(String, Single) Store a key-value pair with float as value type. Declaration void SetFloat(string key, float value) Parameters Type Name Description String key A unique key to pair value with. Single value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetInt(String, Int32) Store a key-value pair with integer as value type. Declaration void SetInt(string key, int value) Parameters Type Name Description String key A unique key to pair value with. Int32 value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetString(String, String) Store a key-value pair with string as value type. Declaration void SetString(string key, string value) Parameters Type Name Description String key A unique key to pair value with. String value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SetTimeSpan(String, TimeSpan) Store a key-value pair with as value type. Declaration void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key A unique key to pair value with. TimeSpan value The value to store Remarks This method does not necessarily save a value . Make sure to call Save() after this method so value presists. SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Adds an event listening to DeleteKey(String) and/or DeleteAll() . Declaration void SubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Listen to a specific key. Set to empty string or null to listen to DeleteAll() event only. IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion. UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) Removes an event listener from DeleteKey(String) and/or DeleteAll() . Declaration void UnsubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key Unsubscribe to a specific key. Set to empty string or null to unsubscribe from DeleteAll() . IAsyncSettingsRecorder.OnKeyDeleted action The function listening to key deletion."
  },
  "api/OmiyaGames.Saves.IAsyncSettingsRecorder.OnKeyDeleted.html": {
    "href": "api/OmiyaGames.Saves.IAsyncSettingsRecorder.OnKeyDeleted.html",
    "title": "Delegate IAsyncSettingsRecorder.OnKeyDeleted | Saves documentation",
    "keywords": "Delegate IAsyncSettingsRecorder.OnKeyDeleted TODO Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate void OnKeyDeleted(IAsyncSettingsRecorder source, KeyDeletedEventArgs args); Parameters Type Name Description IAsyncSettingsRecorder source The source that caused this method to be called. KeyDeletedEventArgs args Any info about the key being deleted, etc."
  },
  "api/OmiyaGames.Saves.IGenerator.html": {
    "href": "api/OmiyaGames.Saves.IGenerator.html",
    "title": "Interface IGenerator | Saves documentation",
    "keywords": "Interface IGenerator Interface that generates a property. Inherited Members IUniqueSetting.Key Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface IGenerator : IUniqueSetting Properties PropertyName Declaration string PropertyName { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.IntRecord.html": {
    "href": "api/OmiyaGames.Saves.IntRecord.html",
    "title": "Class IntRecord | Saves documentation",
    "keywords": "Class IntRecord Stores int information Inheritance Object IRecord < Int32 > IntRecord Inherited Members IRecord<Int32>.Divider IRecord<Int32>.Name IRecord<Int32>.Record IRecord<Int32>.DateAchievedUtc IRecord<Int32>.ToString() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class IntRecord : IRecord<int> Constructors IntRecord(Int32, String) Declaration public IntRecord(int newRecord, string newName) Parameters Type Name Description Int32 newRecord String newName IntRecord(String, Int32, IRecord<Int32>.TryConvertOldRecord) Declaration public IntRecord(string pastRecord, int appVersion, IRecord<int>.TryConvertOldRecord converter = null) Parameters Type Name Description String pastRecord Int32 appVersion IRecord.TryConvertOldRecord <> converter Methods ConvertRecordToString() Declaration protected override string ConvertRecordToString() Returns Type Description String Overrides OmiyaGames.Saves.IRecord<System.Int32>.ConvertRecordToString() ParseRecord(String, Int32, IRecord<Int32>.TryConvertOldRecord) Declaration protected override void ParseRecord(string record, int appVersion, IRecord<int>.TryConvertOldRecord converter) Parameters Type Name Description String record Int32 appVersion IRecord.TryConvertOldRecord <> converter Overrides OmiyaGames.Saves.IRecord<System.Int32>.ParseRecord(System.String, System.Int32, OmiyaGames.Saves.IRecord.TryConvertOldRecord<>) See Also GameSettings"
  },
  "api/OmiyaGames.Saves.IRecord-1.html": {
    "href": "api/OmiyaGames.Saves.IRecord-1.html",
    "title": "Class IRecord<T> | Saves documentation",
    "keywords": "Class IRecord<T> Stores a record that can be stored in GameSettings . Inheritance Object IRecord<T> FloatRecord IntRecord Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class IRecord<T> where T : IComparable<T> Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2014-2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Date: 5/28/2017 Author: Taro Omiya Initial version. Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Converting to package. Constructors IRecord(T, String) Declaration public IRecord(T newRecord, string newName) Parameters Type Name Description T newRecord String newName IRecord(String, Int32, IRecord<T>.TryConvertOldRecord) Declaration public IRecord(string pastRecord, int appVersion, IRecord<T>.TryConvertOldRecord converter) Parameters Type Name Description String pastRecord Int32 appVersion IRecord.TryConvertOldRecord <> converter Fields Divider Declaration public const char Divider = '|' Field Value Type Description Char Properties DateAchievedUtc Declaration public DateTime DateAchievedUtc { get; } Property Value Type Description DateTime Name Declaration public string Name { get; set; } Property Value Type Description String Record Declaration public virtual T Record { get; set; } Property Value Type Description T Methods ConvertRecordToString() Declaration protected abstract string ConvertRecordToString() Returns Type Description String ParseRecord(String, Int32, IRecord<T>.TryConvertOldRecord) Declaration protected abstract void ParseRecord(string record, int appVersion, IRecord<T>.TryConvertOldRecord converter) Parameters Type Name Description String record Int32 appVersion IRecord.TryConvertOldRecord <> converter ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/OmiyaGames.Saves.IRecord-1.TryConvertOldRecord.html": {
    "href": "api/OmiyaGames.Saves.IRecord-1.TryConvertOldRecord.html",
    "title": "Delegate IRecord<T>.TryConvertOldRecord | Saves documentation",
    "keywords": "Delegate IRecord<T>.TryConvertOldRecord Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate bool TryConvertOldRecord(string record, int recordedVersion, out T newRecord); Parameters Type Name Description String record Int32 recordedVersion T newRecord Returns Type Description Boolean"
  },
  "api/OmiyaGames.Saves.ISavesUpgrader.html": {
    "href": "api/OmiyaGames.Saves.ISavesUpgrader.html",
    "title": "Interface ISavesUpgrader | Saves documentation",
    "keywords": "Interface ISavesUpgrader An interface for upgrading stored settings. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface ISavesUpgrader Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial draft. Properties CurrentState Results of running Upgrade(SavesSettings, IAsyncSettingsRecorder) . Declaration LoadState CurrentState { get; } Property Value Type Description LoadState Methods Upgrade(SavesSettings, IAsyncSettingsRecorder) A coroutine that upgrades saved settings. Declaration IEnumerator Upgrade(SavesSettings sourcer, IAsyncSettingsRecorder recorder) Parameters Type Name Description SavesSettings sourcer IAsyncSettingsRecorder recorder Returns Type Description IEnumerator"
  },
  "api/OmiyaGames.Saves.ISettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.ISettingsRecorder.html",
    "title": "Interface ISettingsRecorder | Saves documentation",
    "keywords": "Interface ISettingsRecorder An interface for storing settings. Useful for indicating where a game's settings should be saved. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface ISettingsRecorder Methods DeleteAll() Declaration void DeleteAll() DeleteKey(String) Declaration void DeleteKey(string key) Parameters Type Name Description String key GetBool(String, Boolean) Declaration bool GetBool(string key, bool defaultValue) Parameters Type Name Description String key Boolean defaultValue Returns Type Description Boolean GetDateTimeUtc(String, DateTime) Declaration DateTime GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key DateTime defaultValue Returns Type Description DateTime GetEnum<T>(String, T) Declaration T GetEnum<T>(string key, T defaultValue) where T : Enum Parameters Type Name Description String key T defaultValue Returns Type Description T Type Parameters Name Description T GetFloat(String, Single) Declaration float GetFloat(string key, float defaultValue) Parameters Type Name Description String key Single defaultValue Returns Type Description Single GetInt(String, Int32) Declaration int GetInt(string key, int defaultValue) Parameters Type Name Description String key Int32 defaultValue Returns Type Description Int32 GetString(String, String) Declaration string GetString(string key, string defaultValue) Parameters Type Name Description String key String defaultValue Returns Type Description String GetTimeSpan(String, TimeSpan) Declaration TimeSpan GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key TimeSpan defaultValue Returns Type Description TimeSpan HasKey(String) Declaration bool HasKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Save() Declaration void Save() SetBool(String, Boolean) Declaration void SetBool(string key, bool value) Parameters Type Name Description String key Boolean value SetDateTimeUtc(String, DateTime) Declaration void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key DateTime value SetEnum<T>(String, T) Declaration void SetEnum<T>(string key, T value) where T : Enum Parameters Type Name Description String key T value Type Parameters Name Description T SetFloat(String, Single) Declaration void SetFloat(string key, float value) Parameters Type Name Description String key Single value SetInt(String, Int32) Declaration void SetInt(string key, int value) Parameters Type Name Description String key Int32 value SetString(String, String) Declaration void SetString(string key, string value) Parameters Type Name Description String key String value SetTimeSpan(String, TimeSpan) Declaration void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key TimeSpan value See Also GameSettings"
  },
  "api/OmiyaGames.Saves.ISettingsVersion.html": {
    "href": "api/OmiyaGames.Saves.ISettingsVersion.html",
    "title": "Interface ISettingsVersion | Saves documentation",
    "keywords": "Interface ISettingsVersion Interface that represents a version of saved settings by either adding or modifying on top of settings stored in previous ISettingsVersion (classes with lower Version ). Also where one can retrieve an IGenerator for that version. Anything that implements this interface must be a class . Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface ISettingsVersion Properties Version Declaration ushort Version { get; } Property Value Type Description UInt16 Methods Contains(String) Checks if there's a matching in the collection of IGenerator this version is storing. Declaration bool Contains(string key) Parameters Type Name Description String key Returns Type Description Boolean True if a IGenerator stored in this version has the same . GetGenerator<T>(String) Returns an instance of IGenerator from this version. Declaration T GetGenerator<T>(string key) where T : IGenerator Parameters Type Name Description String key A reference to . Returns Type Description T A IGenerator stored in this version, with the same . Type Parameters Name Description T A IGenerator . Can be an instance to a struct. GetSetting(String) Returns an instance of IStoredSetting from this version. Declaration IStoredSetting GetSetting(string key) Parameters Type Name Description String key A reference to . Returns Type Description IStoredSetting A IGenerator stored in this version, with the same . IsGenerator<T>(String) Checks if there's a matching in the collection of IGenerator this version is storing, AND if it's an instance of IStoredSetting . Declaration bool IsGenerator<T>(string key) where T : IGenerator Parameters Type Name Description String key Returns Type Description Boolean True if a IGenerator stored in this version has the same , AND it's an instance of T . Type Parameters Name Description T A IGenerator . Can be an instance to a struct. IsSetting(String) Checks if there's a matching in the collection of IGenerator this version is storing, AND if it's an instance of IStoredSetting . Declaration bool IsSetting(string key) Parameters Type Name Description String key Returns Type Description Boolean True if a IGenerator stored in this version has the same , AND it's an instance of IStoredSetting . See Also GameSettings NamespaceGeneratorArgs SettingsGeneratorArgs IGenerator"
  },
  "api/OmiyaGames.Saves.ISettingsVersionGenerator.html": {
    "href": "api/OmiyaGames.Saves.ISettingsVersionGenerator.html",
    "title": "Interface ISettingsVersionGenerator | Saves documentation",
    "keywords": "Interface ISettingsVersionGenerator Interface that generates an ISettingsVersion for GameSettings . Inherited Members ISettingsVersion.Version ISettingsVersion.Contains(String) ISettingsVersion.IsSetting(String) ISettingsVersion.IsGenerator<T>(String) ISettingsVersion.GetSetting(String) ISettingsVersion.GetGenerator<T>(String) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface ISettingsVersionGenerator : ISettingsVersion See Also NamespaceGeneratorArgs SettingsGeneratorArgs"
  },
  "api/OmiyaGames.Saves.ISortedRecords-1.AsecendingOrder.html": {
    "href": "api/OmiyaGames.Saves.ISortedRecords-1.AsecendingOrder.html",
    "title": "Class ISortedRecords<T>.AsecendingOrder | Saves documentation",
    "keywords": "Class ISortedRecords<T>.AsecendingOrder Inheritance Object ISortedRecords<T>.AsecendingOrder Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class AsecendingOrder : Comparer<IRecord<T>> Methods Compare(IRecord<T>, IRecord<T>) Declaration public override int Compare(IRecord<T> left, IRecord<T> right) Parameters Type Name Description IRecord <T> left IRecord <T> right Returns Type Description Int32"
  },
  "api/OmiyaGames.Saves.ISortedRecords-1.DescendingOrder.html": {
    "href": "api/OmiyaGames.Saves.ISortedRecords-1.DescendingOrder.html",
    "title": "Class ISortedRecords<T>.DescendingOrder | Saves documentation",
    "keywords": "Class ISortedRecords<T>.DescendingOrder Inheritance Object ISortedRecords<T>.DescendingOrder Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class DescendingOrder : Comparer<IRecord<T>> Methods Compare(IRecord<T>, IRecord<T>) Declaration public override int Compare(IRecord<T> left, IRecord<T> right) Parameters Type Name Description IRecord <T> left IRecord <T> right Returns Type Description Int32"
  },
  "api/OmiyaGames.Saves.ISortedRecords-1.html": {
    "href": "api/OmiyaGames.Saves.ISortedRecords-1.html",
    "title": "Class ISortedRecords<T> | Saves documentation",
    "keywords": "Class ISortedRecords<T> Stores a sorted list of IRecord<T> with a limited capacity. Useful for keeping track of high scores. Inheritance Object ISortedRecords<T> SortedFloatRecords SortedIntRecords Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class ISortedRecords<T> : IEnumerable<IRecord<T>> where T : IComparable<T> Type Parameters Name Description T Constructors ISortedRecords(Int32, IComparer<IRecord<T>>, IRecord<T>.TryConvertOldRecord) Declaration public ISortedRecords(int maxCapacity, IComparer<IRecord<T>> comparer, IRecord<T>.TryConvertOldRecord converter) Parameters Type Name Description Int32 maxCapacity IComparer < IRecord <T>> comparer IRecord.TryConvertOldRecord <> converter ISortedRecords(Int32, Boolean, IRecord<T>.TryConvertOldRecord) Declaration public ISortedRecords(int maxCapacity, bool isSortedInDescendingOrder, IRecord<T>.TryConvertOldRecord converter) Parameters Type Name Description Int32 maxCapacity Boolean isSortedInDescendingOrder IRecord.TryConvertOldRecord <> converter Fields ScoreDivider Declaration public const char ScoreDivider = '\\n' Field Value Type Description Char Properties Comparer Declaration public IComparer<IRecord<T>> Comparer { get; } Property Value Type Description IComparer < IRecord <T>> Converter Declaration public IRecord<T>.TryConvertOldRecord Converter { get; } Property Value Type Description IRecord.TryConvertOldRecord <> Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public IRecord<T> this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description IRecord <T> MaxCapacity Declaration public int MaxCapacity { get; } Property Value Type Description Int32 TopRecord Declaration public IRecord<T> TopRecord { get; } Property Value Type Description IRecord <T> Methods AddRecord(T, String, out IRecord<T>) Declaration public abstract int AddRecord(T record, string name, out IRecord<T> newRecord) Parameters Type Name Description T record String name IRecord <T> newRecord Returns Type Description Int32 AddRecord(IRecord<T>) Checks to see if the record exceeds any values held in this list. If so, adds the record into the list, and returns it's rank placement. Declaration public int AddRecord(IRecord<T> newRecord) Parameters Type Name Description IRecord <T> newRecord Record to add to the list. Returns Type Description Int32 The new record's index in the list, or -1 if it was not added. Clear() Clears all records from the list Declaration public void Clear() GetEnumerator() Declaration public IEnumerator<IRecord<T>> GetEnumerator() Returns Type Description IEnumerator < IRecord <T>> ParseRecord(String, Int32, IRecord<T>.TryConvertOldRecord) Declaration protected abstract IRecord<T> ParseRecord(string recordEntry, int appVersion, IRecord<T>.TryConvertOldRecord converter) Parameters Type Name Description String recordEntry Int32 appVersion IRecord.TryConvertOldRecord <> converter Returns Type Description IRecord <T> RetrieveRecords(String, Int32) Retrieves records from a string recalled from settings. This method will clear anything that's in the list. Declaration public bool RetrieveRecords(string pastRecords, int appVersion) Parameters Type Name Description String pastRecords String from settings Int32 appVersion Returns Type Description Boolean True if all records has been successfully parsed and added into the list. ToString() Returns a string to store in settings. Declaration public override string ToString() Returns Type Description String Returns a string to store in settings."
  },
  "api/OmiyaGames.Saves.IStoredSetting.html": {
    "href": "api/OmiyaGames.Saves.IStoredSetting.html",
    "title": "Interface IStoredSetting | Saves documentation",
    "keywords": "Interface IStoredSetting Interface that saves and retrieves settings. Inherited Members IUniqueSetting.Key Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface IStoredSetting : IUniqueSetting Methods OnClearSetting(ISettingsRecorder, Int32, Int32) Declaration void OnClearSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnRetrieveSetting(ISettingsRecorder, Int32, Int32) Declaration void OnRetrieveSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnSaveSetting(ISettingsRecorder, Int32) Declaration void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion See Also GameSettings"
  },
  "api/OmiyaGames.Saves.IStoredSettingGenerator.html": {
    "href": "api/OmiyaGames.Saves.IStoredSettingGenerator.html",
    "title": "Interface IStoredSettingGenerator | Saves documentation",
    "keywords": "Interface IStoredSettingGenerator Interface that generates a settings property. Inherited Members IGenerator.PropertyName IStoredSetting.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) IStoredSetting.OnSaveSetting(ISettingsRecorder, Int32) IStoredSetting.OnClearSetting(ISettingsRecorder, Int32, Int32) IUniqueSetting.Key Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface IStoredSettingGenerator : IGenerator, IStoredSetting, IUniqueSetting See Also GameSettings"
  },
  "api/OmiyaGames.Saves.IUniqueSetting.html": {
    "href": "api/OmiyaGames.Saves.IUniqueSetting.html",
    "title": "Interface IUniqueSetting | Saves documentation",
    "keywords": "Interface IUniqueSetting Interface with Key . Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface IUniqueSetting Properties Key Returns a key that's used to store in a settings file. Accepts strings with letters, numbers, and spaces. Note that the key MUST start with a letter first, for the purpose of generating a property. Declaration string Key { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.KeyDeletedEventArgs.html": {
    "href": "api/OmiyaGames.Saves.KeyDeletedEventArgs.html",
    "title": "Class KeyDeletedEventArgs | Saves documentation",
    "keywords": "Class KeyDeletedEventArgs Event arguments for . Inheritance Object KeyDeletedEventArgs Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class KeyDeletedEventArgs : EventArgs Constructors KeyDeletedEventArgs(String) Constructor to set Key . Declaration public KeyDeletedEventArgs(string key) Parameters Type Name Description String key Sets Key . Properties Key The key that got deleted. Declaration public string Key { get; } Property Value Type Description String Remarks Can be null , which in that case, the delete operation was called from DeleteAll() ."
  },
  "api/OmiyaGames.Saves.LoadFinishedCompositeEventArgs-1.html": {
    "href": "api/OmiyaGames.Saves.LoadFinishedCompositeEventArgs-1.html",
    "title": "Class LoadFinishedCompositeEventArgs<T> | Saves documentation",
    "keywords": "Class LoadFinishedCompositeEventArgs<T> TODO. Inheritance Object EventArgs LoadFinishedEventArgs LoadFinishedCompositeEventArgs<T> Inherited Members LoadFinishedEventArgs.State Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class LoadFinishedCompositeEventArgs<T> : LoadFinishedEventArgs where T : WaitLoad Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Initial verison. Constructors LoadFinishedCompositeEventArgs(IReadOnlyDictionary<IAsyncSettingsRecorder, T>, LoadState) TODO Declaration public LoadFinishedCompositeEventArgs(IReadOnlyDictionary<IAsyncSettingsRecorder, T> source, LoadState overwriteState) Parameters Type Name Description IReadOnlyDictionary < IAsyncSettingsRecorder , T> source LoadState overwriteState Fields source TODO Declaration public readonly IReadOnlyDictionary<IAsyncSettingsRecorder, T> source Field Value Type Description IReadOnlyDictionary < IAsyncSettingsRecorder , T>"
  },
  "api/OmiyaGames.Saves.LoadFinishedEventArgs.html": {
    "href": "api/OmiyaGames.Saves.LoadFinishedEventArgs.html",
    "title": "Class LoadFinishedEventArgs | Saves documentation",
    "keywords": "Class LoadFinishedEventArgs Event arguments for . Inheritance Object EventArgs LoadFinishedEventArgs LoadFinishedCompositeEventArgs<T> LoadValueFinishedEventArgs<T> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class LoadFinishedEventArgs : EventArgs Constructors LoadFinishedEventArgs(LoadState) Constructor to set State . Declaration public LoadFinishedEventArgs(LoadState state) Parameters Type Name Description LoadState state Sets State . Properties State The finished state. Declaration public LoadState State { get; } Property Value Type Description LoadState"
  },
  "api/OmiyaGames.Saves.LoadState.html": {
    "href": "api/OmiyaGames.Saves.LoadState.html",
    "title": "Enum LoadState | Saves documentation",
    "keywords": "Enum LoadState Indicates the loading state of a coroutine. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public enum LoadState Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/16/2022 Author: Taro Omiya Initial draft. Fields Name Description Fail Loading Success"
  },
  "api/OmiyaGames.Saves.LoadValueFinishedEventArgs-1.html": {
    "href": "api/OmiyaGames.Saves.LoadValueFinishedEventArgs-1.html",
    "title": "Class LoadValueFinishedEventArgs<T> | Saves documentation",
    "keywords": "Class LoadValueFinishedEventArgs<T> Event arguments for . Inheritance Object EventArgs LoadFinishedEventArgs LoadValueFinishedEventArgs<T> Inherited Members LoadFinishedEventArgs.State Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class LoadValueFinishedEventArgs<T> : LoadFinishedEventArgs Type Parameters Name Description T Constructors LoadValueFinishedEventArgs() Constructor for failure status. Declaration public LoadValueFinishedEventArgs() LoadValueFinishedEventArgs(T) Constructor for success status. Declaration public LoadValueFinishedEventArgs(T value) Parameters Type Name Description T value Properties Result The finished state. Declaration public T Result { get; } Property Value Type Description T"
  },
  "api/OmiyaGames.Saves.MaxCap-1.html": {
    "href": "api/OmiyaGames.Saves.MaxCap-1.html",
    "title": "Class MaxCap<T> | Saves documentation",
    "keywords": "Class MaxCap<T> Prevents a setting from becoming larger than the specified bound. Inheritance Object MaxCap<T> Implements PropertyStoredSettingsGenerator.ValueProcessor <> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class MaxCap<T> : PropertyStoredSettingsGenerator<T>.ValueProcessor where T : IComparable Type Parameters Name Description T Methods Get(T) Declaration public static MaxCap<T> Get(T max) Parameters Type Name Description T max Returns Type Description MaxCap <T> Process(T) Declaration public T Process(T value) Parameters Type Name Description T value Returns Type Description T Implements PropertyStoredSettingsGenerator<T>.ValueProcessor See Also Processor"
  },
  "api/OmiyaGames.Saves.MinCap-1.html": {
    "href": "api/OmiyaGames.Saves.MinCap-1.html",
    "title": "Class MinCap<T> | Saves documentation",
    "keywords": "Class MinCap<T> Prevents a setting from becoming smaller than the specified bound. Inheritance Object MinCap<T> Implements PropertyStoredSettingsGenerator.ValueProcessor <> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class MinCap<T> : PropertyStoredSettingsGenerator<T>.ValueProcessor where T : IComparable Type Parameters Name Description T Methods Get(T) Declaration public static MinCap<T> Get(T min) Parameters Type Name Description T min Returns Type Description MinCap <T> Process(T) Declaration public T Process(T value) Parameters Type Name Description T value Returns Type Description T Implements PropertyStoredSettingsGenerator<T>.ValueProcessor See Also Processor"
  },
  "api/OmiyaGames.Saves.NamespaceGeneratorArgs.html": {
    "href": "api/OmiyaGames.Saves.NamespaceGeneratorArgs.html",
    "title": "Class NamespaceGeneratorArgs | Saves documentation",
    "keywords": "Class NamespaceGeneratorArgs Arguments providing a collection of Namespaces. Inheritance Object NamespaceGeneratorArgs Implements IEnumerable < String > Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class NamespaceGeneratorArgs : EventArgs Methods AddNamespace(String, out String) Declaration public bool AddNamespace(string namespaceName, out string errorMessage) Parameters Type Name Description String namespaceName String errorMessage Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < String > IsNamespaceValid(String, out String) Declaration public bool IsNamespaceValid(string namespaceName, out string errorMessage) Parameters Type Name Description String namespaceName String errorMessage Returns Type Description Boolean RemoveNamespace(String, out String) Declaration public bool RemoveNamespace(string namespaceName, out string errorMessage) Parameters Type Name Description String namespaceName String errorMessage Returns Type Description Boolean Implements IEnumerable<> See Also GameSettings"
  },
  "api/OmiyaGames.Saves.PlayerPrefsSettingsRecorder.html": {
    "href": "api/OmiyaGames.Saves.PlayerPrefsSettingsRecorder.html",
    "title": "Class PlayerPrefsSettingsRecorder | Saves documentation",
    "keywords": "Class PlayerPrefsSettingsRecorder An implementation of ISettingsRecorder using PlayerPrefs . Inheritance Object SettingsRecorderDecorator PlayerPrefsSettingsRecorder Implements ISettingsRecorder Inherited Members SettingsRecorderDecorator.GetBool(String, Boolean) SettingsRecorderDecorator.SetBool(String, Boolean) SettingsRecorderDecorator.GetEnum<T>(String, T) SettingsRecorderDecorator.SetEnum<T>(String, T) SettingsRecorderDecorator.GetDateTimeUtc(String, DateTime) SettingsRecorderDecorator.SetDateTimeUtc(String, DateTime) SettingsRecorderDecorator.GetTimeSpan(String, TimeSpan) SettingsRecorderDecorator.SetTimeSpan(String, TimeSpan) Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class PlayerPrefsSettingsRecorder : SettingsRecorderDecorator, ISettingsRecorder Methods DeleteAll() Declaration public override void DeleteAll() Overrides SettingsRecorderDecorator.DeleteAll() DeleteKey(String) Declaration public override void DeleteKey(string key) Parameters Type Name Description String key Overrides SettingsRecorderDecorator.DeleteKey(String) GetFloat(String, Single) Declaration public override float GetFloat(string key, float defaultValue) Parameters Type Name Description String key Single defaultValue Returns Type Description Single Overrides SettingsRecorderDecorator.GetFloat(String, Single) GetInt(String, Int32) Declaration public override int GetInt(string key, int defaultValue) Parameters Type Name Description String key Int32 defaultValue Returns Type Description Int32 Overrides SettingsRecorderDecorator.GetInt(String, Int32) GetString(String, String) Declaration public override string GetString(string key, string defaultValue) Parameters Type Name Description String key String defaultValue Returns Type Description String Overrides SettingsRecorderDecorator.GetString(String, String) HasKey(String) Declaration public override bool HasKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Overrides SettingsRecorderDecorator.HasKey(String) Save() Declaration public override void Save() Overrides SettingsRecorderDecorator.Save() SetFloat(String, Single) Declaration public override void SetFloat(string key, float value) Parameters Type Name Description String key Single value Overrides SettingsRecorderDecorator.SetFloat(String, Single) SetInt(String, Int32) Declaration public override void SetInt(string key, int value) Parameters Type Name Description String key Int32 value Overrides SettingsRecorderDecorator.SetInt(String, Int32) SetString(String, String) Declaration public override void SetString(string key, string value) Parameters Type Name Description String key String value Overrides SettingsRecorderDecorator.SetString(String, String) Implements ISettingsRecorder See Also ISettingsRecorder GameSettings"
  },
  "api/OmiyaGames.Saves.PropertyGenerator.html": {
    "href": "api/OmiyaGames.Saves.PropertyGenerator.html",
    "title": "Class PropertyGenerator | Saves documentation",
    "keywords": "Class PropertyGenerator Abstract class that helps generate a property in GameSettings . Inheritance Object GeneratorDecorator PropertyGenerator StoredPlayTimeGenerator Implements IGenerator IUniqueSetting Inherited Members GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.Key GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class PropertyGenerator : GeneratorDecorator, IGenerator, IUniqueSetting Constructors PropertyGenerator(String, Type) Declaration public PropertyGenerator(string propertyName, Type type) Parameters Type Name Description String propertyName Type type Properties GetterCode Declaration public override GeneratorDecorator.PropertyWriter GetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides GeneratorDecorator.GetterCode PropertyName Declaration public override string PropertyName { get; set; } Property Value Type Description String Overrides GeneratorDecorator.PropertyName SetterCode Declaration public override GeneratorDecorator.PropertyWriter SetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides GeneratorDecorator.SetterCode TypeName Declaration public override string TypeName { get; } Property Value Type Description String Overrides GeneratorDecorator.TypeName Implements IGenerator IUniqueSetting"
  },
  "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ConvertOldSettings.html": {
    "href": "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ConvertOldSettings.html",
    "title": "Delegate PropertyStoredSettingsGenerator<T>.ConvertOldSettings | Saves documentation",
    "keywords": "Delegate PropertyStoredSettingsGenerator<T>.ConvertOldSettings Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate T ConvertOldSettings(ISettingsRecorder settings, string key, int recordedVersion, int latestVersion, T defaultValue); Parameters Type Name Description ISettingsRecorder settings String key Int32 recordedVersion Int32 latestVersion T defaultValue Returns Type Description T"
  },
  "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.html": {
    "href": "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.html",
    "title": "Class PropertyStoredSettingsGenerator<T> | Saves documentation",
    "keywords": "Class PropertyStoredSettingsGenerator<T> Abstract class that helps generate a property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator<T> SortedRecordSettingGenerator<T> StoredBoolGenerator StoredDateTimeUtcGenerator StoredEnumGenerator<T> StoredFloatGenerator StoredIntGenerator StoredStringGenerator StoredTimeSpanGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class PropertyStoredSettingsGenerator<T> : GeneratorDecorator, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Type Parameters Name Description T Constructors PropertyStoredSettingsGenerator(String, T) Declaration public PropertyStoredSettingsGenerator(string key, T defaultValue) Parameters Type Name Description String key T defaultValue Fields DefaultGetterCode Declaration public static readonly GeneratorDecorator.PropertyWriter DefaultGetterCode Field Value Type Description GeneratorDecorator.PropertyWriter DefaultSetterCode Declaration public static readonly GeneratorDecorator.PropertyWriter DefaultSetterCode Field Value Type Description GeneratorDecorator.PropertyWriter Properties Converter Declaration public PropertyStoredSettingsGenerator<T>.ConvertOldSettings Converter { get; set; } Property Value Type Description PropertyStoredSettingsGenerator.ConvertOldSettings <> GetterCode Declaration public override GeneratorDecorator.PropertyWriter GetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides GeneratorDecorator.GetterCode IsValueRetainedOnClear Allows a value to be saved even after data is reset. Declaration public bool IsValueRetainedOnClear { get; set; } Property Value Type Description Boolean Key Declaration public override string Key { get; } Property Value Type Description String Overrides GeneratorDecorator.Key Processor Declaration public PropertyStoredSettingsGenerator<T>.ValueProcessor Processor { get; set; } Property Value Type Description PropertyStoredSettingsGenerator.ValueProcessor <> PropertyName Declaration public override string PropertyName { get; set; } Property Value Type Description String Overrides GeneratorDecorator.PropertyName SetterCode Declaration public override GeneratorDecorator.PropertyWriter SetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides GeneratorDecorator.SetterCode TypeName Declaration public override string TypeName { get; } Property Value Type Description String Overrides GeneratorDecorator.TypeName Value Declaration public T Value { get; } Property Value Type Description T Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, T) Declaration public abstract T DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, T defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion T defaultValue Returns Type Description T IsSameValue(T) Declaration public abstract bool IsSameValue(T compareValue) Parameters Type Name Description T compareValue Returns Type Description Boolean OnClearSetting(ISettingsRecorder, Int32, Int32) Declaration public void OnClearSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnRetrieveSetting(ISettingsRecorder, Int32, Int32) Declaration public void OnRetrieveSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnSaveSetting(ISettingsRecorder, Int32) Declaration public abstract void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion SetValue(T, ISettingsRecorder, Int32) Declaration public bool SetValue(T newValue, ISettingsRecorder settings, int latestVersion) Parameters Type Name Description T newValue ISettingsRecorder settings Int32 latestVersion Returns Type Description Boolean Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ValueChange.html": {
    "href": "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ValueChange.html",
    "title": "Delegate PropertyStoredSettingsGenerator<T>.ValueChange | Saves documentation",
    "keywords": "Delegate PropertyStoredSettingsGenerator<T>.ValueChange Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate void ValueChange(PropertyStoredSettingsGenerator<T> source, T oldValue, T newValue); Parameters Type Name Description PropertyStoredSettingsGenerator <T> source T oldValue T newValue"
  },
  "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ValueProcessor.html": {
    "href": "api/OmiyaGames.Saves.PropertyStoredSettingsGenerator-1.ValueProcessor.html",
    "title": "Interface PropertyStoredSettingsGenerator<T>.ValueProcessor | Saves documentation",
    "keywords": "Interface PropertyStoredSettingsGenerator<T>.ValueProcessor Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public interface ValueProcessor Methods Process(T) Declaration T Process(T value) Parameters Type Name Description T value Returns Type Description T"
  },
  "api/OmiyaGames.Saves.SaveBool.html": {
    "href": "api/OmiyaGames.Saves.SaveBool.html",
    "title": "Class SaveBool | Saves documentation",
    "keywords": "Class SaveBool Interface for loading a float from Inheritance Object SaveObject SaveSingleValue < Boolean , Boolean > SaveBool Implements ITrackable < Boolean > Inherited Members SaveSingleValue<Boolean, Boolean>.OnBeforeValueChanged SaveSingleValue<Boolean, Boolean>.OnAfterValueChanged SaveSingleValue<Boolean, Boolean>.defaultValue SaveSingleValue<Boolean, Boolean>.storedValue SaveSingleValue<Boolean, Boolean>.HasValue SaveSingleValue<Boolean, Boolean>.RecordValue(Boolean) SaveSingleValue<Boolean, Boolean>.RetrieveValue() SaveSingleValue<Boolean, Boolean>.HandleLoadFailure SaveSingleValue<Boolean, Boolean>.Value SaveSingleValue<Boolean, Boolean>.ConvertedDefaultValue SaveSingleValue<Boolean, Boolean>.Setup(IAsyncSettingsRecorder) SaveSingleValue<Boolean, Boolean>.Load() SaveSingleValue<Boolean, Boolean>.RevertToDefault() SaveSingleValue<Boolean, Boolean>.SetValue(Boolean, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveBool : SaveSingleValue<bool, bool>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/17/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override bool ConvertedDefaultValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<System.Boolean, System.Boolean>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<System.Boolean, System.Boolean>.HasValue Methods RecordValue(Boolean) TODO Declaration protected override void RecordValue(bool newValue) Parameters Type Name Description Boolean newValue Overrides OmiyaGames.Saves.SaveSingleValue<System.Boolean, System.Boolean>.RecordValue(System.Boolean) RetrieveValue() TODO Declaration protected override WaitLoadValue<bool> RetrieveValue() Returns Type Description WaitLoadValue < Boolean > Overrides OmiyaGames.Saves.SaveSingleValue<System.Boolean, System.Boolean>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveComparableValue-2.html": {
    "href": "api/OmiyaGames.Saves.SaveComparableValue-2.html",
    "title": "Class SaveComparableValue<TValue, TSerialized> | Saves documentation",
    "keywords": "Class SaveComparableValue<TValue, TSerialized> Helper abstract class with common methods already defined for most comparable variable types. Inheritance Object SaveObject SaveSingleValue <TValue, TSerialized> SaveComparableValue<TValue, TSerialized> SaveFloat SaveInt Implements ITrackable <TValue> Inherited Members SaveSingleValue<TValue, TSerialized>.OnBeforeValueChanged SaveSingleValue<TValue, TSerialized>.OnAfterValueChanged SaveSingleValue<TValue, TSerialized>.defaultValue SaveSingleValue<TValue, TSerialized>.storedValue SaveSingleValue<TValue, TSerialized>.HasValue SaveSingleValue<TValue, TSerialized>.RecordValue(TValue) SaveSingleValue<TValue, TSerialized>.RetrieveValue() SaveSingleValue<TValue, TSerialized>.HandleLoadFailure SaveSingleValue<TValue, TSerialized>.Value SaveSingleValue<TValue, TSerialized>.ConvertedDefaultValue SaveSingleValue<TValue, TSerialized>.Setup(IAsyncSettingsRecorder) SaveSingleValue<TValue, TSerialized>.Load() SaveSingleValue<TValue, TSerialized>.RevertToDefault() SaveSingleValue<TValue, TSerialized>.SetValue(TValue, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SaveComparableValue<TValue, TSerialized> : SaveSingleValue<TValue, TSerialized>, IDisposable where TValue : IComparable<TValue> Type Parameters Name Description TValue The type of value being tracked. TSerialized The type that is actually serialized; specifically, . Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/17/2022 Author: Taro Omiya Initial draft. Properties HasMax TODO Declaration public bool HasMax { get; } Property Value Type Description Boolean HasMin TODO Declaration public bool HasMin { get; } Property Value Type Description Boolean MaxValue TODO Declaration public TValue MaxValue { get; protected set; } Property Value Type Description TValue MinValue TODO Declaration public TValue MinValue { get; protected set; } Property Value Type Description TValue Methods Clamp(TValue) TODO Declaration protected virtual TValue Clamp(TValue value) Parameters Type Name Description TValue value Returns Type Description TValue SetValue(TValue, SaveState) TODO Declaration protected override TValue SetValue(TValue value, SaveState setState) Parameters Type Name Description TValue value SaveState setState Returns Type Description TValue Overrides OmiyaGames.Saves.SaveSingleValue<TValue, TSerialized>.SetValue(TValue, OmiyaGames.Saves.SaveState) Exceptions Type Condition Exception Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveDateTime.html": {
    "href": "api/OmiyaGames.Saves.SaveDateTime.html",
    "title": "Class SaveDateTime | Saves documentation",
    "keywords": "Class SaveDateTime Interface for loading a from IAsyncSettingsRecorder Inheritance Object SaveObject SaveSingleValue < DateTime , String > SaveDateTime Implements ITrackable < DateTime > Inherited Members SaveSingleValue<DateTime, String>.OnBeforeValueChanged SaveSingleValue<DateTime, String>.OnAfterValueChanged SaveSingleValue<DateTime, String>.defaultValue SaveSingleValue<DateTime, String>.storedValue SaveSingleValue<DateTime, String>.HasValue SaveSingleValue<DateTime, String>.RecordValue(DateTime) SaveSingleValue<DateTime, String>.RetrieveValue() SaveSingleValue<DateTime, String>.HandleLoadFailure SaveSingleValue<DateTime, String>.Value SaveSingleValue<DateTime, String>.ConvertedDefaultValue SaveSingleValue<DateTime, String>.Setup(IAsyncSettingsRecorder) SaveSingleValue<DateTime, String>.Load() SaveSingleValue<DateTime, String>.RevertToDefault() SaveSingleValue<DateTime, String>.SetValue(DateTime, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveDateTime : SaveSingleValue<DateTime, string>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/20/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override DateTime ConvertedDefaultValue { get; } Property Value Type Description DateTime Overrides OmiyaGames.Saves.SaveSingleValue<DateTime, System.String>.ConvertedDefaultValue Remarks Time will always be in UTC. HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<DateTime, System.String>.HasValue Methods Convert(in DateTime) Converts a to string. Declaration public static string Convert(in DateTime value) Parameters Type Name Description DateTime value Value to convert. Returns Type Description String Equivalent string. Convert(String) Converts a string to . Declaration public static DateTime Convert(string value) Parameters Type Name Description String value Value to convert. Returns Type Description DateTime Equivalent . RecordValue(DateTime) TODO Declaration protected override void RecordValue(DateTime newValue) Parameters Type Name Description DateTime newValue Overrides OmiyaGames.Saves.SaveSingleValue<DateTime, System.String>.RecordValue(DateTime) Remarks Make sure newValue is in UTC. Reset() Set default values here. Declaration public override void Reset() Overrides SaveObject.Reset() RetrieveValue() TODO Declaration protected override WaitLoadValue<DateTime> RetrieveValue() Returns Type Description WaitLoadValue < DateTime > Overrides OmiyaGames.Saves.SaveSingleValue<DateTime, System.String>.RetrieveValue() Remarks Retrieved value will be in UTC. Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveEnum-1.html": {
    "href": "api/OmiyaGames.Saves.SaveEnum-1.html",
    "title": "Class SaveEnum<T> | Saves documentation",
    "keywords": "Class SaveEnum<T> Interface for loading a enum from a IAsyncSettingsRecorder . Inheritance Object SaveObject SaveSingleValue <T, T> SaveEnum<T> SaveEnumFlags<T> Implements ITrackable <T> Inherited Members SaveSingleValue<T, T>.OnBeforeValueChanged SaveSingleValue<T, T>.OnAfterValueChanged SaveSingleValue<T, T>.defaultValue SaveSingleValue<T, T>.storedValue SaveSingleValue<T, T>.HasValue SaveSingleValue<T, T>.RecordValue(T) SaveSingleValue<T, T>.RetrieveValue() SaveSingleValue<T, T>.HandleLoadFailure SaveSingleValue<T, T>.Value SaveSingleValue<T, T>.ConvertedDefaultValue SaveSingleValue<T, T>.Setup(IAsyncSettingsRecorder) SaveSingleValue<T, T>.Load() SaveSingleValue<T, T>.RevertToDefault() SaveSingleValue<T, T>.SetValue(T, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveEnum<T> : SaveSingleValue<T, T>, IDisposable where T : Enum Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/20/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override T ConvertedDefaultValue { get; } Property Value Type Description T Overrides OmiyaGames.Saves.SaveSingleValue<T, T>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<T, T>.HasValue Methods RecordValue(T) TODO Declaration protected override void RecordValue(T newValue) Parameters Type Name Description T newValue Overrides OmiyaGames.Saves.SaveSingleValue<T, T>.RecordValue(T) RetrieveValue() TODO Declaration protected override WaitLoadValue<T> RetrieveValue() Returns Type Description WaitLoadValue <T> Overrides OmiyaGames.Saves.SaveSingleValue<T, T>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveEnumFlags-1.html": {
    "href": "api/OmiyaGames.Saves.SaveEnumFlags-1.html",
    "title": "Class SaveEnumFlags<T> | Saves documentation",
    "keywords": "Class SaveEnumFlags<T> Interface for loading a enum from a IAsyncSettingsRecorder . Meant for enums with FlagsAttribute . Inheritance Object SaveObject SaveSingleValue <T, T> SaveEnum <T> SaveEnumFlags<T> Implements ITrackable <T> Inherited Members SaveEnum<T>.ConvertedDefaultValue SaveEnum<T>.HasValue SaveEnum<T>.RecordValue(T) SaveEnum<T>.RetrieveValue() SaveSingleValue<T, T>.OnBeforeValueChanged SaveSingleValue<T, T>.OnAfterValueChanged SaveSingleValue<T, T>.defaultValue SaveSingleValue<T, T>.storedValue SaveSingleValue<T, T>.HasValue SaveSingleValue<T, T>.RecordValue(T) SaveSingleValue<T, T>.RetrieveValue() SaveSingleValue<T, T>.HandleLoadFailure SaveSingleValue<T, T>.Value SaveSingleValue<T, T>.ConvertedDefaultValue SaveSingleValue<T, T>.Setup(IAsyncSettingsRecorder) SaveSingleValue<T, T>.Load() SaveSingleValue<T, T>.RevertToDefault() SaveSingleValue<T, T>.SetValue(T, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveEnumFlags<T> : SaveEnum<T>, IDisposable where T : Enum Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveFloat.html": {
    "href": "api/OmiyaGames.Saves.SaveFloat.html",
    "title": "Class SaveFloat | Saves documentation",
    "keywords": "Class SaveFloat Interface for loading a float from Inheritance Object SaveObject SaveSingleValue < Single , Single > SaveComparableValue < Single , Single > SaveFloat Implements ITrackable < Single > Inherited Members SaveComparableValue<Single, Single>.HasMin SaveComparableValue<Single, Single>.MinValue SaveComparableValue<Single, Single>.HasMax SaveComparableValue<Single, Single>.MaxValue SaveComparableValue<Single, Single>.SetValue(Single, SaveState) SaveComparableValue<Single, Single>.Clamp(Single) SaveSingleValue<Single, Single>.OnBeforeValueChanged SaveSingleValue<Single, Single>.OnAfterValueChanged SaveSingleValue<Single, Single>.defaultValue SaveSingleValue<Single, Single>.storedValue SaveSingleValue<Single, Single>.HasValue SaveSingleValue<Single, Single>.RecordValue(Single) SaveSingleValue<Single, Single>.RetrieveValue() SaveSingleValue<Single, Single>.HandleLoadFailure SaveSingleValue<Single, Single>.Value SaveSingleValue<Single, Single>.ConvertedDefaultValue SaveSingleValue<Single, Single>.Setup(IAsyncSettingsRecorder) SaveSingleValue<Single, Single>.Load() SaveSingleValue<Single, Single>.RevertToDefault() SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveFloat : SaveComparableValue<float, float>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/17/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override float ConvertedDefaultValue { get; } Property Value Type Description Single Overrides OmiyaGames.Saves.SaveSingleValue<System.Single, System.Single>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<System.Single, System.Single>.HasValue Methods RecordValue(Single) TODO Declaration protected override void RecordValue(float newValue) Parameters Type Name Description Single newValue Overrides OmiyaGames.Saves.SaveSingleValue<System.Single, System.Single>.RecordValue(System.Single) Reset() Set default values here. Declaration public override void Reset() Overrides SaveObject.Reset() RetrieveValue() TODO Declaration protected override WaitLoadValue<float> RetrieveValue() Returns Type Description WaitLoadValue < Single > Overrides OmiyaGames.Saves.SaveSingleValue<System.Single, System.Single>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveInt.html": {
    "href": "api/OmiyaGames.Saves.SaveInt.html",
    "title": "Class SaveInt | Saves documentation",
    "keywords": "Class SaveInt Interface for loading an integer from IAsyncSettingsRecorder Inheritance Object SaveObject SaveSingleValue < Int32 , Int32 > SaveComparableValue < Int32 , Int32 > SaveInt Implements ITrackable < Int32 > Inherited Members SaveComparableValue<Int32, Int32>.HasMin SaveComparableValue<Int32, Int32>.MinValue SaveComparableValue<Int32, Int32>.HasMax SaveComparableValue<Int32, Int32>.MaxValue SaveComparableValue<Int32, Int32>.SetValue(Int32, SaveState) SaveComparableValue<Int32, Int32>.Clamp(Int32) SaveSingleValue<Int32, Int32>.OnBeforeValueChanged SaveSingleValue<Int32, Int32>.OnAfterValueChanged SaveSingleValue<Int32, Int32>.defaultValue SaveSingleValue<Int32, Int32>.storedValue SaveSingleValue<Int32, Int32>.HasValue SaveSingleValue<Int32, Int32>.RecordValue(Int32) SaveSingleValue<Int32, Int32>.RetrieveValue() SaveSingleValue<Int32, Int32>.HandleLoadFailure SaveSingleValue<Int32, Int32>.Value SaveSingleValue<Int32, Int32>.ConvertedDefaultValue SaveSingleValue<Int32, Int32>.Setup(IAsyncSettingsRecorder) SaveSingleValue<Int32, Int32>.Load() SaveSingleValue<Int32, Int32>.RevertToDefault() SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveInt : SaveComparableValue<int, int>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override int ConvertedDefaultValue { get; } Property Value Type Description Int32 Overrides OmiyaGames.Saves.SaveSingleValue<System.Int32, System.Int32>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<System.Int32, System.Int32>.HasValue Methods RecordValue(Int32) TODO Declaration protected override void RecordValue(int newValue) Parameters Type Name Description Int32 newValue Overrides OmiyaGames.Saves.SaveSingleValue<System.Int32, System.Int32>.RecordValue(System.Int32) Reset() Set default values here. Declaration public override void Reset() Overrides SaveObject.Reset() RetrieveValue() TODO Declaration protected override WaitLoadValue<int> RetrieveValue() Returns Type Description WaitLoadValue < Int32 > Overrides OmiyaGames.Saves.SaveSingleValue<System.Int32, System.Int32>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveObject.html": {
    "href": "api/OmiyaGames.Saves.SaveObject.html",
    "title": "Class SaveObject | Saves documentation",
    "keywords": "Class SaveObject Interface for implementing saving and loading a value. Inheritance Object SaveObject SaveSingleValue<TValue, TSerialized> SaveSlot Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SaveObject : ScriptableObject, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Initial draft. Fields MENU_ORDER Declaration public const int MENU_ORDER = 300 Field Value Type Description Int32 RANDOM_CHAR_ARRAY Declaration public const string RANDOM_CHAR_ARRAY = \"0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_*\" Field Value Type Description String Properties CurrentState Indicates if this object has been setup. Declaration public SaveState CurrentState { get; protected set; } Property Value Type Description SaveState HandleLoadFailure Indicate how to handle errors calling Load() . Declaration public abstract ErrorHandling HandleLoadFailure { get; } Property Value Type Description ErrorHandling Key The unique key for this object. Declaration public string Key { get; } Property Value Type Description String Recorder The recorder used for this object. Declaration public IAsyncSettingsRecorder Recorder { get; } Property Value Type Description IAsyncSettingsRecorder Methods Dispose() Declaration public void Dispose() Load() Attempts to load the data from Recorder asynchronously. Declaration public abstract WaitLoad Load() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Reset() Set default values here. Declaration public virtual void Reset() RevertToDefault() Sets the saves value back to default. Declaration public abstract void RevertToDefault() Setup(IAsyncSettingsRecorder) Configures this save object. Declaration public virtual void Setup(IAsyncSettingsRecorder recorder) Parameters Type Name Description IAsyncSettingsRecorder recorder The interface to saving persistent data. ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/OmiyaGames.Saves.SaveObjectComparer.html": {
    "href": "api/OmiyaGames.Saves.SaveObjectComparer.html",
    "title": "Class SaveObjectComparer | Saves documentation",
    "keywords": "Class SaveObjectComparer TODO Inheritance Object SaveObjectComparer Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveObjectComparer : IEqualityComparer<SaveObject> Methods Equals(SaveObject, SaveObject) Declaration public bool Equals(SaveObject x, SaveObject y) Parameters Type Name Description SaveObject x SaveObject y Returns Type Description Boolean GetHashCode(SaveObject) Declaration public int GetHashCode(SaveObject obj) Parameters Type Name Description SaveObject obj Returns Type Description Int32"
  },
  "api/OmiyaGames.Saves.SaveObjectInfoAttribute.html": {
    "href": "api/OmiyaGames.Saves.SaveObjectInfoAttribute.html",
    "title": "Class SaveObjectInfoAttribute | Saves documentation",
    "keywords": "Class SaveObjectInfoAttribute Attribute for showing more helper functionality to SaveObject Inheritance Object SaveObjectInfoAttribute Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveObjectInfoAttribute : PropertyAttribute Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/20/2022 Author: Taro Omiya Initial verison. Constructors SaveObjectInfoAttribute() Default constructor. Declaration public SaveObjectInfoAttribute()"
  },
  "api/OmiyaGames.Saves.SaveObjectMap-1.html": {
    "href": "api/OmiyaGames.Saves.SaveObjectMap-1.html",
    "title": "Class SaveObjectMap<T> | Saves documentation",
    "keywords": "Class SaveObjectMap<T> A collection of SaveObject s. If used as an inspector-exposed variable, Setup() must be called before using this map. Inheritance Object SaveObjectMap<T> Implements ISerializationCallbackReceiver Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax [Serializable] public class SaveObjectMap<T> : IDictionary<string, T> where T : SaveObject Type Parameters Name Description T Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/21/2022 Author: Taro Omiya Initial draft. Version: 0.2.1-exp Date: 2/26/2022 Author: Taro Omiya Fixing deserialization logic. Since SaveObject s are not guaranteed to be setup by the time OnAfterDeserialize() is called, moved its logic into Setup() instead. Constructors SaveObjectMap() Default constructor that sets up an empty set. Declaration public SaveObjectMap() SaveObjectMap(IEqualityComparer<String>) Constructor to set the , used to check if two elements matches. Declaration public SaveObjectMap(IEqualityComparer<string> comparer) Parameters Type Name Description IEqualityComparer < String > comparer Comparer to check if two elements matches. SaveObjectMap(Int32) Constructor an empty set with initial capacity defined. Declaration public SaveObjectMap(int capacity) Parameters Type Name Description Int32 capacity Initial capacity of this list. SaveObjectMap(Int32, IEqualityComparer<String>) Constructor to set the , used to check if two elements matches. Declaration public SaveObjectMap(int capacity, IEqualityComparer<string> comparer) Parameters Type Name Description Int32 capacity Initial capacity of this set. IEqualityComparer < String > comparer Comparer to check if two elements matches. Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean IsSerializing Indicates if this collection is in the middle of serializing. Declaration public bool IsSerializing { get; } Property Value Type Description Boolean IsSetup Indicates if the map is setup or not. Declaration public bool IsSetup { get; } Property Value Type Description Boolean Item[String] Declaration public T this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description T Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Values Declaration public ICollection<T> Values { get; } Property Value Type Description ICollection <T> Methods Add(T) Adds an object ont this set. Declaration public bool Add(T saveObject) Parameters Type Name Description T saveObject Returns Type Description Boolean Clear() Declaration public void Clear() Contains(T) TODO Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description Boolean ContainsKey(String) Declaration public bool ContainsKey(string key) Parameters Type Name Description String key Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, T>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < String , T>> OnAfterDeserialize() Declaration [Obsolete(\"Manual call not supported.\", true)] public void OnAfterDeserialize() OnBeforeSerialize() Declaration [Obsolete(\"Manual call not supported.\", true)] public void OnBeforeSerialize() Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean Setup() Sets up this map. Necessary if this map is edited in the Unity inspector. Declaration public void Setup() TryGetValue(String, out T) Declaration public bool TryGetValue(string key, out T value) Parameters Type Name Description String key T value Returns Type Description Boolean Implements ISerializationCallbackReceiver"
  },
  "api/OmiyaGames.Saves.SaveSingleValue-2.html": {
    "href": "api/OmiyaGames.Saves.SaveSingleValue-2.html",
    "title": "Class SaveSingleValue<TValue, TSerialized> | Saves documentation",
    "keywords": "Class SaveSingleValue<TValue, TSerialized> Helper abstract class with common methods already defined for most situations. Inheritance Object SaveObject SaveSingleValue<TValue, TSerialized> SaveBool SaveComparableValue<TValue, TSerialized> SaveDateTime SaveEnum<T> SaveString SaveTimeSpan Implements ITrackable <TValue> Inherited Members SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SaveSingleValue<TValue, TSerialized> : SaveObject, IDisposable Type Parameters Name Description TValue The type of value being tracked. TSerialized The type that is actually serialized; specifically, defaultValue . Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/17/2022 Author: Taro Omiya Initial draft. Fields defaultValue Declaration protected TSerialized defaultValue Field Value Type Description TSerialized storedValue Declaration protected TValue storedValue Field Value Type Description TValue Properties ConvertedDefaultValue Default value set in the inspector. Declaration public abstract TValue ConvertedDefaultValue { get; } Property Value Type Description TValue HandleLoadFailure Indicate how to handle errors calling Load() . Declaration public override ErrorHandling HandleLoadFailure { get; } Property Value Type Description ErrorHandling Overrides SaveObject.HandleLoadFailure HasValue Declaration public abstract bool HasValue { get; } Property Value Type Description Boolean Value Declaration public TValue Value { get; set; } Property Value Type Description TValue Methods Load() Attempts to load the data from Recorder asynchronously. Declaration public override WaitLoad Load() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Overrides SaveObject.Load() RecordValue(TValue) TODO Declaration protected abstract void RecordValue(TValue newValue) Parameters Type Name Description TValue newValue RetrieveValue() TODO Declaration protected abstract WaitLoadValue<TValue> RetrieveValue() Returns Type Description WaitLoadValue <TValue> RevertToDefault() Sets the saves value back to default. Declaration public override void RevertToDefault() Overrides SaveObject.RevertToDefault() Setup(IAsyncSettingsRecorder) Configures this save object. Declaration public override void Setup(IAsyncSettingsRecorder recorder) Parameters Type Name Description IAsyncSettingsRecorder recorder The interface to saving persistent data. Overrides SaveObject.Setup(IAsyncSettingsRecorder) SetValue(TValue, SaveState) TODO Declaration protected virtual TValue SetValue(TValue value, SaveState setState) Parameters Type Name Description TValue value SaveState setState Returns Type Description TValue Exceptions Type Condition Exception Events OnAfterValueChanged Declaration public event ITrackable<TValue>.ChangeEvent OnAfterValueChanged Event Type Type Description ITrackable.ChangeEvent <> OnBeforeValueChanged Declaration public event ITrackable<TValue>.ChangeEvent OnBeforeValueChanged Event Type Type Description ITrackable.ChangeEvent <> Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SaveSlot.html": {
    "href": "api/OmiyaGames.Saves.SaveSlot.html",
    "title": "Class SaveSlot | Saves documentation",
    "keywords": "Class SaveSlot Collection of SaveObjects, acting like a save slot. Inheritance Object SaveObject SaveSlot Implements ITrackable < Int32 > Inherited Members SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax [Obsolete(\"Not Implemented yet\")] public class SaveSlot : SaveObject, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/16/2022 Author: Taro Omiya Initial draft. Properties Capacity The maximum number of slots provided. Declaration public int Capacity { get; } Property Value Type Description Int32 Count Declaration public int Count { get; } Property Value Type Description Int32 HandleLoadFailure Indicate how to handle errors calling Load() . Declaration public override ErrorHandling HandleLoadFailure { get; } Property Value Type Description ErrorHandling Overrides SaveObject.HandleLoadFailure HasValue Declaration public bool HasValue { get; } Property Value Type Description Boolean SlotData Declaration public IReadOnlyCollection<SaveObject> SlotData { get; } Property Value Type Description IReadOnlyCollection < SaveObject > Value Declaration public int Value { get; set; } Property Value Type Description Int32 Methods Load() Attempts to load the data from Recorder asynchronously. Declaration public override WaitLoad Load() Returns Type Description WaitLoad Coroutine indicating whether the operation succeeded or not. Overrides SaveObject.Load() RevertToDefault() Sets the saves value back to default. Declaration public override void RevertToDefault() Overrides SaveObject.RevertToDefault() Setup(IAsyncSettingsRecorder) Configures this save object. Declaration public override void Setup(IAsyncSettingsRecorder recorder) Parameters Type Name Description IAsyncSettingsRecorder recorder The interface to saving persistent data. Overrides SaveObject.Setup(IAsyncSettingsRecorder) SetValue(Int32, SaveState) TODO Declaration protected virtual int SetValue(int value, SaveState setState) Parameters Type Name Description Int32 value SaveState setState Returns Type Description Int32 Exceptions Type Condition Exception Events OnAfterValueChanged Declaration public event ITrackable<int>.ChangeEvent OnAfterValueChanged Event Type Type Description ITrackable.ChangeEvent <> OnBeforeValueChanged Declaration public event ITrackable<int>.ChangeEvent OnBeforeValueChanged Event Type Type Description ITrackable.ChangeEvent <> Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SavesManager.html": {
    "href": "api/OmiyaGames.Saves.SavesManager.html",
    "title": "Class SavesManager | Saves documentation",
    "keywords": "Class SavesManager A manager file that configures and loads SaveObject s on Setup(Boolean) . Allows retrieving SaveObject by their keys. Handles global Save() . Inheritance Object SavesManager Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public static class SavesManager Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial verison. Version: 0.2.1-exp.1 Date: 2/26/2022 Author: Taro Omiya Throwing exceptions if manager is not setup when calling TryGet(String, out SaveObject) and Contains(SaveObject) . Renamed TryGetSave(string, out SaveObject) to TryGet(String, out SaveObject) . Added Contains(String) . Version: 0.2.2-exp.1 Date: 3/2/2022 Author: Taro Omiya Updated class to be static , preventing it from being attached to any . Version: 0.2.3-exp.1 Date: 3/3/2022 Author: Taro Omiya Updated class to latest standards. Fields ADDRESSABLE_NAME Name of the addressable. Declaration public const string ADDRESSABLE_NAME = \"SavesSettings\" Field Value Type Description String CONFIG_NAME The configuration name stored in Editor Settings. Declaration public const string CONFIG_NAME = \"com.omiyagames.saves\" Field Value Type Description String SIDEBAR_PATH The name this settings will appear in the Project Setting's left-sidebar. Declaration public const string SIDEBAR_PATH = \"Project/Omiya Games/Saves\" Field Value Type Description String UXML_PATH Path to UXML file. Declaration public const string UXML_PATH = \"Packages/com.omiyagames.saves/Editor/Saves.uxml\" Field Value Type Description String Properties Status Indicates whether the manager is either still in the middle of setting up, or is already setup. Declaration public static Data.Status Status { get; } Property Value Type Description Data.Status Methods Contains(SaveObject) TODO Declaration public static bool Contains(SaveObject saveObject) Parameters Type Name Description SaveObject saveObject Returns Type Description Boolean Exceptions Type Condition ArgumentNullException Contains(String) TODO Declaration public static bool Contains(string key) Parameters Type Name Description String key Returns Type Description Boolean Exceptions Type Condition ArgumentException DeleteAllKeys() TODO Declaration public static WaitLoad DeleteAllKeys() Returns Type Description WaitLoad DeleteKey(String) TODO Declaration public static WaitLoad DeleteKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoad Get(String) TODO Declaration public static SaveObject Get(string key) Parameters Type Name Description String key Returns Type Description SaveObject HasKey(String) TODO Declaration public static WaitLoadValue<bool> HasKey(string key) Parameters Type Name Description String key Returns Type Description WaitLoadValue < Boolean > Save() TODO Declaration public static WaitLoad Save() Returns Type Description WaitLoad Setup(Boolean) A coroutine to setup this manager. Declaration public static IEnumerator Setup(bool forceSetup = false) Parameters Type Name Description Boolean forceSetup Returns Type Description IEnumerator SubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) TODO Declaration public static void SubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key IAsyncSettingsRecorder.OnKeyDeleted action TryGet(String, out SaveObject) TODO Declaration public static bool TryGet(string key, out SaveObject saveObject) Parameters Type Name Description String key SaveObject saveObject Returns Type Description Boolean UnsubscribeToDeleteKey(String, IAsyncSettingsRecorder.OnKeyDeleted) TODO Declaration public static void UnsubscribeToDeleteKey(string key, IAsyncSettingsRecorder.OnKeyDeleted action) Parameters Type Name Description String key IAsyncSettingsRecorder.OnKeyDeleted action"
  },
  "api/OmiyaGames.Saves.SavesSettings.html": {
    "href": "api/OmiyaGames.Saves.SavesSettings.html",
    "title": "Class SavesSettings | Saves documentation",
    "keywords": "Class SavesSettings Scriptable object with settings info. Inheritance Object SavesSettings Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SavesSettings : BaseSettingsData Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial draft. Properties CurrentVersion Declaration public override int CurrentVersion { get; } Property Value Type Description Int32 Recorders TODO Declaration public SavesSettings.SupportedRecorder[] Recorders { get; } Property Value Type Description SavesSettings.SupportedRecorder [] SaveData TODO Declaration public SaveObjectMap<SaveObject> SaveData { get; } Property Value Type Description SaveObjectMap < SaveObject > Upgraders TODO Declaration public SavesUpgrader[] Upgraders { get; } Property Value Type Description SavesUpgrader [] Version TODO Declaration public SaveInt Version { get; } Property Value Type Description SaveInt"
  },
  "api/OmiyaGames.Saves.SavesSettings.SupportedRecorder.html": {
    "href": "api/OmiyaGames.Saves.SavesSettings.SupportedRecorder.html",
    "title": "Struct SavesSettings.SupportedRecorder | Saves documentation",
    "keywords": "Struct SavesSettings.SupportedRecorder Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax [Serializable] public struct SupportedRecorder Constructors SupportedRecorder(SupportedPlatforms, AsyncSettingsRecorder) Declaration public SupportedRecorder(SupportedPlatforms platforms, AsyncSettingsRecorder recorder) Parameters Type Name Description SupportedPlatforms platforms AsyncSettingsRecorder recorder Properties Platforms Declaration public readonly SupportedPlatforms Platforms { get; } Property Value Type Description SupportedPlatforms Recorder Declaration public readonly AsyncSettingsRecorder Recorder { get; } Property Value Type Description AsyncSettingsRecorder"
  },
  "api/OmiyaGames.Saves.SaveState.html": {
    "href": "api/OmiyaGames.Saves.SaveState.html",
    "title": "Enum SaveState | Saves documentation",
    "keywords": "Enum SaveState Indicates the state of this object. Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public enum SaveState Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp Date: 2/16/2022 Author: Taro Omiya Initial draft. Fields Name Description Desynced Value is not stored yet. NotSetup Indicates that this object is not setup yet. Synced Value is stored."
  },
  "api/OmiyaGames.Saves.SaveString.html": {
    "href": "api/OmiyaGames.Saves.SaveString.html",
    "title": "Class SaveString | Saves documentation",
    "keywords": "Class SaveString Interface for loading a string from Inheritance Object SaveObject SaveSingleValue < String , String > SaveString Implements ITrackable < String > Inherited Members SaveSingleValue<String, String>.OnBeforeValueChanged SaveSingleValue<String, String>.OnAfterValueChanged SaveSingleValue<String, String>.defaultValue SaveSingleValue<String, String>.storedValue SaveSingleValue<String, String>.HasValue SaveSingleValue<String, String>.RecordValue(String) SaveSingleValue<String, String>.RetrieveValue() SaveSingleValue<String, String>.HandleLoadFailure SaveSingleValue<String, String>.Value SaveSingleValue<String, String>.ConvertedDefaultValue SaveSingleValue<String, String>.Setup(IAsyncSettingsRecorder) SaveSingleValue<String, String>.Load() SaveSingleValue<String, String>.RevertToDefault() SaveSingleValue<String, String>.SetValue(String, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.Reset() SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveString : SaveSingleValue<string, string>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override string ConvertedDefaultValue { get; } Property Value Type Description String Overrides OmiyaGames.Saves.SaveSingleValue<System.String, System.String>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<System.String, System.String>.HasValue Methods RecordValue(String) TODO Declaration protected override void RecordValue(string newValue) Parameters Type Name Description String newValue Overrides OmiyaGames.Saves.SaveSingleValue<System.String, System.String>.RecordValue(System.String) RetrieveValue() TODO Declaration protected override WaitLoadValue<string> RetrieveValue() Returns Type Description WaitLoadValue < String > Overrides OmiyaGames.Saves.SaveSingleValue<System.String, System.String>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SavesUpgrader.html": {
    "href": "api/OmiyaGames.Saves.SavesUpgrader.html",
    "title": "Class SavesUpgrader | Saves documentation",
    "keywords": "Class SavesUpgrader A implementation of ISavesUpgrader . Inheritance Object SavesUpgrader Implements ISavesUpgrader Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SavesUpgrader : ScriptableObject, ISavesUpgrader Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/18/2022 Author: Taro Omiya Initial draft. Properties CurrentState Results of running Upgrade(SavesSettings, IAsyncSettingsRecorder) . Declaration public LoadState CurrentState { get; protected set; } Property Value Type Description LoadState Methods ToString() Declaration public override string ToString() Returns Type Description String Upgrade(SavesSettings, IAsyncSettingsRecorder) A coroutine that upgrades saved settings. Declaration public abstract IEnumerator Upgrade(SavesSettings sourcer, IAsyncSettingsRecorder recorder) Parameters Type Name Description SavesSettings sourcer IAsyncSettingsRecorder recorder Returns Type Description IEnumerator Implements ISavesUpgrader See Also ISavesUpgrader"
  },
  "api/OmiyaGames.Saves.SaveTimeSpan.html": {
    "href": "api/OmiyaGames.Saves.SaveTimeSpan.html",
    "title": "Class SaveTimeSpan | Saves documentation",
    "keywords": "Class SaveTimeSpan Interface for loading a from IAsyncSettingsRecorder Inheritance Object SaveObject SaveSingleValue < TimeSpan , String > SaveTimeSpan Implements ITrackable < TimeSpan > Inherited Members SaveSingleValue<TimeSpan, String>.OnBeforeValueChanged SaveSingleValue<TimeSpan, String>.OnAfterValueChanged SaveSingleValue<TimeSpan, String>.defaultValue SaveSingleValue<TimeSpan, String>.storedValue SaveSingleValue<TimeSpan, String>.HasValue SaveSingleValue<TimeSpan, String>.RecordValue(TimeSpan) SaveSingleValue<TimeSpan, String>.RetrieveValue() SaveSingleValue<TimeSpan, String>.HandleLoadFailure SaveSingleValue<TimeSpan, String>.Value SaveSingleValue<TimeSpan, String>.ConvertedDefaultValue SaveSingleValue<TimeSpan, String>.Setup(IAsyncSettingsRecorder) SaveSingleValue<TimeSpan, String>.Load() SaveSingleValue<TimeSpan, String>.RevertToDefault() SaveSingleValue<TimeSpan, String>.SetValue(TimeSpan, SaveState) SaveObject.MENU_ORDER SaveObject.RANDOM_CHAR_ARRAY SaveObject.HandleLoadFailure SaveObject.CurrentState SaveObject.Recorder SaveObject.Key SaveObject.Load() SaveObject.RevertToDefault() SaveObject.Setup(IAsyncSettingsRecorder) SaveObject.ToString() SaveObject.Dispose() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SaveTimeSpan : SaveSingleValue<TimeSpan, string>, IDisposable Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/20/2022 Author: Taro Omiya Initial draft. Properties ConvertedDefaultValue Default value set in the inspector. Declaration public override TimeSpan ConvertedDefaultValue { get; } Property Value Type Description TimeSpan Overrides OmiyaGames.Saves.SaveSingleValue<TimeSpan, System.String>.ConvertedDefaultValue HasValue Declaration public override bool HasValue { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.SaveSingleValue<TimeSpan, System.String>.HasValue Methods Convert(String) Converts a string to . Declaration public static TimeSpan Convert(string value) Parameters Type Name Description String value Value to convert. Returns Type Description TimeSpan Equivalent . Convert(in TimeSpan) Converts a to string. Declaration public static string Convert(in TimeSpan value) Parameters Type Name Description TimeSpan value Value to convert. Returns Type Description String Equivalent string. RecordValue(TimeSpan) TODO Declaration protected override void RecordValue(TimeSpan newValue) Parameters Type Name Description TimeSpan newValue Overrides OmiyaGames.Saves.SaveSingleValue<TimeSpan, System.String>.RecordValue(TimeSpan) Reset() Set default values here. Declaration public override void Reset() Overrides SaveObject.Reset() RetrieveValue() TODO Declaration protected override WaitLoadValue<TimeSpan> RetrieveValue() Returns Type Description WaitLoadValue < TimeSpan > Overrides OmiyaGames.Saves.SaveSingleValue<TimeSpan, System.String>.RetrieveValue() Implements ITrackable<>"
  },
  "api/OmiyaGames.Saves.SettingsGeneratorArgs.html": {
    "href": "api/OmiyaGames.Saves.SettingsGeneratorArgs.html",
    "title": "Class SettingsGeneratorArgs | Saves documentation",
    "keywords": "Class SettingsGeneratorArgs Arguments providing a collection of IGenerator Inheritance Object SettingsGeneratorArgs Implements IEnumerable < KeyValuePair < Int32 , ICollection < SettingsGeneratorArgs.SingleSettingsInfo >>> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SettingsGeneratorArgs : EventArgs Methods AddSetting(Int32, IGenerator, out String) Declaration public bool AddSetting(int versionArrayIndex, IGenerator generator, out string errorMessage) Parameters Type Name Description Int32 versionArrayIndex IGenerator generator String errorMessage Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<KeyValuePair<int, ICollection<SettingsGeneratorArgs.SingleSettingsInfo>>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < Int32 , ICollection < SettingsGeneratorArgs.SingleSettingsInfo >>> RemoveSetting(String, out String) Declaration public bool RemoveSetting(string generatorKey, out string errorMessage) Parameters Type Name Description String generatorKey String errorMessage Returns Type Description Boolean Implements IEnumerable<> See Also GameSettings"
  },
  "api/OmiyaGames.Saves.SettingsGeneratorArgs.SingleSettingsInfo.html": {
    "href": "api/OmiyaGames.Saves.SettingsGeneratorArgs.SingleSettingsInfo.html",
    "title": "Struct SettingsGeneratorArgs.SingleSettingsInfo | Saves documentation",
    "keywords": "Struct SettingsGeneratorArgs.SingleSettingsInfo Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public struct SingleSettingsInfo Constructors SingleSettingsInfo(Int32, IGenerator) Declaration public SingleSettingsInfo(int versionArrayIndex, IGenerator generator) Parameters Type Name Description Int32 versionArrayIndex IGenerator generator Fields generator Declaration public readonly IGenerator generator Field Value Type Description IGenerator isStoredSetting Declaration public readonly bool isStoredSetting Field Value Type Description Boolean versionArrayIndex Declaration public readonly int versionArrayIndex Field Value Type Description Int32 Properties propertyName Declaration public readonly string propertyName { get; } Property Value Type Description String"
  },
  "api/OmiyaGames.Saves.SettingsRecorderDecorator.html": {
    "href": "api/OmiyaGames.Saves.SettingsRecorderDecorator.html",
    "title": "Class SettingsRecorderDecorator | Saves documentation",
    "keywords": "Class SettingsRecorderDecorator A decorator that implements a couple of ISettingsRecorder methods by wrapping a couple of methods with other methods. Extending this class should reduce the amount of work necessary to implement an ISettingsRecorder . Inheritance Object SettingsRecorderDecorator PlayerPrefsSettingsRecorder Implements ISettingsRecorder Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SettingsRecorderDecorator : ISettingsRecorder Methods DeleteAll() Declaration public abstract void DeleteAll() DeleteKey(String) Declaration public abstract void DeleteKey(string key) Parameters Type Name Description String key GetBool(String, Boolean) Gets a bool from stored settings. This method is actually a wrapper of GetInt(string, int) . Declaration public virtual bool GetBool(string key, bool defaultValue) Parameters Type Name Description String key Boolean defaultValue Returns Type Description Boolean See Also GetInt(String, Int32) GetDateTimeUtc(String, DateTime) Gets a DateTime (in UTC) from stored settings. This method is actually a wrapper of GetString(string, string) . Declaration public virtual DateTime GetDateTimeUtc(string key, DateTime defaultValue) Parameters Type Name Description String key DateTime defaultValue Returns Type Description DateTime See Also GetString(String, String) GetEnum<T>(String, T) Gets an enum from stored settings. This method is actually a wrapper of GetInt(string, int) . Declaration public virtual T GetEnum<T>(string key, T defaultValue) where T : Enum Parameters Type Name Description String key T defaultValue Returns Type Description T Type Parameters Name Description T See Also GetInt(String, Int32) GetFloat(String, Single) Declaration public abstract float GetFloat(string key, float defaultValue) Parameters Type Name Description String key Single defaultValue Returns Type Description Single GetInt(String, Int32) Declaration public abstract int GetInt(string key, int defaultValue) Parameters Type Name Description String key Int32 defaultValue Returns Type Description Int32 GetString(String, String) Declaration public abstract string GetString(string key, string defaultValue) Parameters Type Name Description String key String defaultValue Returns Type Description String GetTimeSpan(String, TimeSpan) Gets a TimeSpan from stored settings. This method is actually a wrapper of GetString(string, string) . Declaration public virtual TimeSpan GetTimeSpan(string key, TimeSpan defaultValue) Parameters Type Name Description String key TimeSpan defaultValue Returns Type Description TimeSpan See Also GetString(String, String) HasKey(String) Declaration public abstract bool HasKey(string key) Parameters Type Name Description String key Returns Type Description Boolean Save() Declaration public abstract void Save() SetBool(String, Boolean) Sets an bool in the stored settings. This method is actually a wrapper of SetInt(string, int) . Declaration public virtual void SetBool(string key, bool value) Parameters Type Name Description String key Boolean value See Also SetInt(String, Int32) SetDateTimeUtc(String, DateTime) Sets a DateTime in the stored settings. Make sure the value is in UTC! This method is actually a wrapper of SetString(string, string) . Declaration public virtual void SetDateTimeUtc(string key, DateTime value) Parameters Type Name Description String key DateTime value See Also SetString(String, String) SetEnum<T>(String, T) Sets an enum in the stored settings. This method is actually a wrapper of SetInt(string, int) . Declaration public virtual void SetEnum<T>(string key, T value) where T : Enum Parameters Type Name Description String key T value Type Parameters Name Description T See Also SetInt(String, Int32) SetFloat(String, Single) Declaration public abstract void SetFloat(string key, float value) Parameters Type Name Description String key Single value SetInt(String, Int32) Declaration public abstract void SetInt(string key, int value) Parameters Type Name Description String key Int32 value SetString(String, String) Declaration public abstract void SetString(string key, string value) Parameters Type Name Description String key String value SetTimeSpan(String, TimeSpan) Sets a TimeSpan in the stored settings. This method is actually a wrapper of SetString(string, string) . Declaration public virtual void SetTimeSpan(string key, TimeSpan value) Parameters Type Name Description String key TimeSpan value See Also SetString(String, String) Implements ISettingsRecorder See Also ISettingsRecorder GameSettings"
  },
  "api/OmiyaGames.Saves.SettingsVersionGeneratorDecorator.html": {
    "href": "api/OmiyaGames.Saves.SettingsVersionGeneratorDecorator.html",
    "title": "Class SettingsVersionGeneratorDecorator | Saves documentation",
    "keywords": "Class SettingsVersionGeneratorDecorator Inheritance Object SettingsVersionGeneratorDecorator AddAudioSettings AddHighScores AddLanguageSettings AddLocalAnalytics AddOptions Implements ISettingsVersionGenerator ISettingsVersion Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class SettingsVersionGeneratorDecorator : ISettingsVersionGenerator, ISettingsVersion Constructors SettingsVersionGeneratorDecorator() Sets up allSettingsGenerator . Declaration public SettingsVersionGeneratorDecorator() Fields allSettingsGenerator A map of IGenerator . Declaration protected readonly Dictionary<string, IGenerator> allSettingsGenerator Field Value Type Description Dictionary < String , IGenerator > Properties Version Returns a unique number indicating the version of this setting. The larget the number, the newer the class. Declaration public abstract ushort Version { get; } Property Value Type Description UInt16 Methods Contains(String) Checks if there's a matching in the collection of IStoredSetting this version is storing. Declaration public bool Contains(string key) Parameters Type Name Description String key Returns Type Description Boolean True if a IStoredSetting stored in this version has the same . GetGenerator<T>(String) Returns an instance of IStoredSetting from this version. Declaration public T GetGenerator<T>(string key) where T : IGenerator Parameters Type Name Description String key A reference to . Returns Type Description T A IStoredSetting stored in this version, with the same . Type Parameters Name Description T A IStoredSetting . Can be an instance to a struct. GetKeysToRemove() Gets a list of keys to remove from previous ISettingsVersion in Declaration protected abstract string[] GetKeysToRemove() Returns Type Description String [] GetNewGenerators() Gets a list of generators to add in Declaration protected abstract IGenerator[] GetNewGenerators() Returns Type Description IGenerator [] GetSetting(String) Returns an instance of IStoredSetting from this version. Declaration public IStoredSetting GetSetting(string key) Parameters Type Name Description String key A reference to . Returns Type Description IStoredSetting A IStoredSetting stored in this version, with the same . IsGenerator<T>(String) Checks if there's a matching in the collection of IGenerator this version is storing, AND if it's an instance of IStoredSetting . Declaration public bool IsGenerator<T>(string key) where T : IGenerator Parameters Type Name Description String key Returns Type Description Boolean True if a IGenerator stored in this version has the same , AND it's an instance of T . Type Parameters Name Description T A IGenerator . Can be an instance to a struct. IsSetting(String) Checks if there's a matching in the collection of IGenerator this version is storing, AND if it's an instance of IStoredSetting . Declaration public bool IsSetting(string key) Parameters Type Name Description String key Returns Type Description Boolean True if a IGenerator stored in this version has the same , AND it's an instance of IStoredSetting . Implements ISettingsVersionGenerator ISettingsVersion"
  },
  "api/OmiyaGames.Saves.SingleLineObjectFieldAttribute.html": {
    "href": "api/OmiyaGames.Saves.SingleLineObjectFieldAttribute.html",
    "title": "Class SingleLineObjectFieldAttribute | Saves documentation",
    "keywords": "Class SingleLineObjectFieldAttribute Attribute for making object fields take up only a single line, taking up the full width (no label.) Useful for lists of objects. Inheritance Object SingleLineObjectFieldAttribute Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SingleLineObjectFieldAttribute : PropertyAttribute Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/20/2022 Author: Taro Omiya Initial verison. Constructors SingleLineObjectFieldAttribute() Default constructor. Declaration public SingleLineObjectFieldAttribute()"
  },
  "api/OmiyaGames.Saves.SortedFloatRecords.html": {
    "href": "api/OmiyaGames.Saves.SortedFloatRecords.html",
    "title": "Class SortedFloatRecords | Saves documentation",
    "keywords": "Class SortedFloatRecords Stores a sorted list of FloatRecord with a limited capacity. Useful for keeping track of high scores. Inheritance Object ISortedRecords < Single > SortedFloatRecords Inherited Members ISortedRecords<Single>.ScoreDivider ISortedRecords<Single>.Comparer ISortedRecords<Single>.MaxCapacity ISortedRecords<Single>.Count ISortedRecords<Single>.Converter ISortedRecords<Single>.Item[Int32] ISortedRecords<Single>.TopRecord ISortedRecords<Single>.AddRecord(IRecord<Single>) ISortedRecords<Single>.RetrieveRecords(String, Int32) ISortedRecords<Single>.Clear() ISortedRecords<Single>.GetEnumerator() ISortedRecords<Single>.ToString() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SortedFloatRecords : ISortedRecords<float> Constructors SortedFloatRecords(Int32, IComparer<IRecord<Single>>, IRecord<Single>.TryConvertOldRecord) Declaration public SortedFloatRecords(int maxCapacity, IComparer<IRecord<float>> comparer, IRecord<float>.TryConvertOldRecord converter = null) Parameters Type Name Description Int32 maxCapacity IComparer < IRecord < Single >> comparer IRecord.TryConvertOldRecord <> converter SortedFloatRecords(Int32, Boolean, IRecord<Single>.TryConvertOldRecord) Declaration public SortedFloatRecords(int maxCapacity, bool isSortedInDescendingOrder = true, IRecord<float>.TryConvertOldRecord converter = null) Parameters Type Name Description Int32 maxCapacity Boolean isSortedInDescendingOrder IRecord.TryConvertOldRecord <> converter Methods AddRecord(Single, String, out IRecord<Single>) Declaration public override int AddRecord(float record, string name, out IRecord<float> newRecord) Parameters Type Name Description Single record String name IRecord < Single > newRecord Returns Type Description Int32 Overrides OmiyaGames.Saves.ISortedRecords<System.Single>.AddRecord(System.Single, System.String, OmiyaGames.Saves.IRecord<System.Single>) ParseRecord(String, Int32, IRecord<Single>.TryConvertOldRecord) Declaration protected override IRecord<float> ParseRecord(string recordEntry, int appVersion, IRecord<float>.TryConvertOldRecord converter) Parameters Type Name Description String recordEntry Int32 appVersion IRecord.TryConvertOldRecord <> converter Returns Type Description IRecord < Single > Overrides OmiyaGames.Saves.ISortedRecords<System.Single>.ParseRecord(System.String, System.Int32, OmiyaGames.Saves.IRecord.TryConvertOldRecord<>)"
  },
  "api/OmiyaGames.Saves.SortedIntRecords.html": {
    "href": "api/OmiyaGames.Saves.SortedIntRecords.html",
    "title": "Class SortedIntRecords | Saves documentation",
    "keywords": "Class SortedIntRecords Stores a sorted list of IntRecord with a limited capacity. Useful for keeping track of high scores. Inheritance Object ISortedRecords < Int32 > SortedIntRecords Inherited Members ISortedRecords<Int32>.ScoreDivider ISortedRecords<Int32>.Comparer ISortedRecords<Int32>.MaxCapacity ISortedRecords<Int32>.Count ISortedRecords<Int32>.Converter ISortedRecords<Int32>.Item[Int32] ISortedRecords<Int32>.TopRecord ISortedRecords<Int32>.AddRecord(IRecord<Int32>) ISortedRecords<Int32>.RetrieveRecords(String, Int32) ISortedRecords<Int32>.Clear() ISortedRecords<Int32>.GetEnumerator() ISortedRecords<Int32>.ToString() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SortedIntRecords : ISortedRecords<int> Constructors SortedIntRecords(Int32, IComparer<IRecord<Int32>>, IRecord<Int32>.TryConvertOldRecord) Declaration public SortedIntRecords(int maxCapacity, IComparer<IRecord<int>> comparer, IRecord<int>.TryConvertOldRecord converter = null) Parameters Type Name Description Int32 maxCapacity IComparer < IRecord < Int32 >> comparer IRecord.TryConvertOldRecord <> converter SortedIntRecords(Int32, Boolean, IRecord<Int32>.TryConvertOldRecord) Declaration public SortedIntRecords(int maxCapacity, bool isSortedInDescendingOrder = true, IRecord<int>.TryConvertOldRecord converter = null) Parameters Type Name Description Int32 maxCapacity Boolean isSortedInDescendingOrder IRecord.TryConvertOldRecord <> converter Methods AddRecord(Int32, String, out IRecord<Int32>) Declaration public override int AddRecord(int record, string name, out IRecord<int> newRecord) Parameters Type Name Description Int32 record String name IRecord < Int32 > newRecord Returns Type Description Int32 Overrides OmiyaGames.Saves.ISortedRecords<System.Int32>.AddRecord(System.Int32, System.String, OmiyaGames.Saves.IRecord<System.Int32>) ParseRecord(String, Int32, IRecord<Int32>.TryConvertOldRecord) Declaration protected override IRecord<int> ParseRecord(string recordEntry, int appVersion, IRecord<int>.TryConvertOldRecord converter) Parameters Type Name Description String recordEntry Int32 appVersion IRecord.TryConvertOldRecord <> converter Returns Type Description IRecord < Int32 > Overrides OmiyaGames.Saves.ISortedRecords<System.Int32>.ParseRecord(System.String, System.Int32, OmiyaGames.Saves.IRecord.TryConvertOldRecord<>)"
  },
  "api/OmiyaGames.Saves.SortedRecordSettingGenerator-1.html": {
    "href": "api/OmiyaGames.Saves.SortedRecordSettingGenerator-1.html",
    "title": "Class SortedRecordSettingGenerator<T> | Saves documentation",
    "keywords": "Class SortedRecordSettingGenerator<T> Generates a ISortedRecords<T> property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < ISortedRecords <T>> SortedRecordSettingGenerator<T> Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<ISortedRecords<T>>.DefaultGetterCode PropertyStoredSettingsGenerator<ISortedRecords<T>>.DefaultSetterCode PropertyStoredSettingsGenerator<ISortedRecords<T>>.Key PropertyStoredSettingsGenerator<ISortedRecords<T>>.Value PropertyStoredSettingsGenerator<ISortedRecords<T>>.TypeName PropertyStoredSettingsGenerator<ISortedRecords<T>>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<ISortedRecords<T>>.Converter PropertyStoredSettingsGenerator<ISortedRecords<T>>.Processor PropertyStoredSettingsGenerator<ISortedRecords<T>>.PropertyName PropertyStoredSettingsGenerator<ISortedRecords<T>>.SetValue(ISortedRecords<T>, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<ISortedRecords<T>>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<ISortedRecords<T>>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<ISortedRecords<T>>.GetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class SortedRecordSettingGenerator<T> : PropertyStoredSettingsGenerator<ISortedRecords<T>>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting where T : IComparable<T> Type Parameters Name Description T Constructors SortedRecordSettingGenerator(String, ISortedRecords<T>) Declaration public SortedRecordSettingGenerator(string key, ISortedRecords<T> defaultValue) Parameters Type Name Description String key ISortedRecords <T> defaultValue Properties SetterCode Declaration public override GeneratorDecorator.PropertyWriter SetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<OmiyaGames.Saves.ISortedRecords<T>>.SetterCode Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, ISortedRecords<T>) Declaration public override ISortedRecords<T> DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, ISortedRecords<T> defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion ISortedRecords <T> defaultValue Returns Type Description ISortedRecords <T> Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<OmiyaGames.Saves.ISortedRecords<T>>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, OmiyaGames.Saves.ISortedRecords<T>) IsSameValue(ISortedRecords<T>) Declaration public override bool IsSameValue(ISortedRecords<T> compareValue) Parameters Type Name Description ISortedRecords <T> compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<OmiyaGames.Saves.ISortedRecords<T>>.IsSameValue(OmiyaGames.Saves.ISortedRecords<T>) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<OmiyaGames.Saves.ISortedRecords<T>>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredBoolGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredBoolGenerator.html",
    "title": "Class StoredBoolGenerator | Saves documentation",
    "keywords": "Class StoredBoolGenerator Generates a bool property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < Boolean > StoredBoolGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<Boolean>.DefaultGetterCode PropertyStoredSettingsGenerator<Boolean>.DefaultSetterCode PropertyStoredSettingsGenerator<Boolean>.Key PropertyStoredSettingsGenerator<Boolean>.Value PropertyStoredSettingsGenerator<Boolean>.TypeName PropertyStoredSettingsGenerator<Boolean>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<Boolean>.Converter PropertyStoredSettingsGenerator<Boolean>.Processor PropertyStoredSettingsGenerator<Boolean>.PropertyName PropertyStoredSettingsGenerator<Boolean>.SetValue(Boolean, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<Boolean>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Boolean>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Boolean>.GetterCode PropertyStoredSettingsGenerator<Boolean>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredBoolGenerator : PropertyStoredSettingsGenerator<bool>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredBoolGenerator(String, Boolean) Declaration public StoredBoolGenerator(string key, bool defaultValue) Parameters Type Name Description String key Boolean defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, Boolean) Declaration public override bool DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, bool defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Boolean defaultValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Boolean>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, System.Boolean) IsSameValue(Boolean) Declaration public override bool IsSameValue(bool compareValue) Parameters Type Name Description Boolean compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Boolean>.IsSameValue(System.Boolean) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Boolean>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredDateTimeUtcGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredDateTimeUtcGenerator.html",
    "title": "Class StoredDateTimeUtcGenerator | Saves documentation",
    "keywords": "Class StoredDateTimeUtcGenerator Generates a (in UTC) property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < DateTime > StoredDateTimeUtcGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<DateTime>.DefaultGetterCode PropertyStoredSettingsGenerator<DateTime>.DefaultSetterCode PropertyStoredSettingsGenerator<DateTime>.Key PropertyStoredSettingsGenerator<DateTime>.Value PropertyStoredSettingsGenerator<DateTime>.TypeName PropertyStoredSettingsGenerator<DateTime>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<DateTime>.Converter PropertyStoredSettingsGenerator<DateTime>.Processor PropertyStoredSettingsGenerator<DateTime>.PropertyName PropertyStoredSettingsGenerator<DateTime>.SetValue(DateTime, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<DateTime>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<DateTime>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<DateTime>.GetterCode PropertyStoredSettingsGenerator<DateTime>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredDateTimeUtcGenerator : PropertyStoredSettingsGenerator<DateTime>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredDateTimeUtcGenerator(String, DateTime) Declaration public StoredDateTimeUtcGenerator(string key, DateTime defaultValue) Parameters Type Name Description String key DateTime defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, DateTime) Declaration public override DateTime DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, DateTime defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion DateTime defaultValue Returns Type Description DateTime Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<DateTime>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, DateTime) IsSameValue(DateTime) Declaration public override bool IsSameValue(DateTime compareValue) Parameters Type Name Description DateTime compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<DateTime>.IsSameValue(DateTime) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<DateTime>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredEnumGenerator-1.html": {
    "href": "api/OmiyaGames.Saves.StoredEnumGenerator-1.html",
    "title": "Class StoredEnumGenerator<T> | Saves documentation",
    "keywords": "Class StoredEnumGenerator<T> Generates an enum property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator <T> StoredEnumGenerator<T> Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<T>.DefaultGetterCode PropertyStoredSettingsGenerator<T>.DefaultSetterCode PropertyStoredSettingsGenerator<T>.Key PropertyStoredSettingsGenerator<T>.Value PropertyStoredSettingsGenerator<T>.TypeName PropertyStoredSettingsGenerator<T>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<T>.Converter PropertyStoredSettingsGenerator<T>.Processor PropertyStoredSettingsGenerator<T>.PropertyName PropertyStoredSettingsGenerator<T>.SetValue(T, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<T>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<T>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<T>.GetterCode PropertyStoredSettingsGenerator<T>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredEnumGenerator<T> : PropertyStoredSettingsGenerator<T>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting where T : Enum Type Parameters Name Description T Constructors StoredEnumGenerator(String, T) Declaration public StoredEnumGenerator(string key, T defaultValue) Parameters Type Name Description String key T defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, T) Declaration public override T DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, T defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion T defaultValue Returns Type Description T Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<T>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, T) IsSameValue(T) Declaration public override bool IsSameValue(T compareValue) Parameters Type Name Description T compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<T>.IsSameValue(T) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<T>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredFloatGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredFloatGenerator.html",
    "title": "Class StoredFloatGenerator | Saves documentation",
    "keywords": "Class StoredFloatGenerator Generates a float property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < Single > StoredFloatGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<Single>.DefaultGetterCode PropertyStoredSettingsGenerator<Single>.DefaultSetterCode PropertyStoredSettingsGenerator<Single>.Key PropertyStoredSettingsGenerator<Single>.Value PropertyStoredSettingsGenerator<Single>.TypeName PropertyStoredSettingsGenerator<Single>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<Single>.Converter PropertyStoredSettingsGenerator<Single>.Processor PropertyStoredSettingsGenerator<Single>.PropertyName PropertyStoredSettingsGenerator<Single>.SetValue(Single, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<Single>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Single>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Single>.GetterCode PropertyStoredSettingsGenerator<Single>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredFloatGenerator : PropertyStoredSettingsGenerator<float>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredFloatGenerator(String, Single) Declaration public StoredFloatGenerator(string key, float defaultValue) Parameters Type Name Description String key Single defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, Single) Declaration public override float DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, float defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Single defaultValue Returns Type Description Single Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Single>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, System.Single) IsSameValue(Single) Declaration public override bool IsSameValue(float compareValue) Parameters Type Name Description Single compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Single>.IsSameValue(System.Single) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Single>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredIntGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredIntGenerator.html",
    "title": "Class StoredIntGenerator | Saves documentation",
    "keywords": "Class StoredIntGenerator Generates an int property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < Int32 > StoredIntGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<Int32>.DefaultGetterCode PropertyStoredSettingsGenerator<Int32>.DefaultSetterCode PropertyStoredSettingsGenerator<Int32>.Key PropertyStoredSettingsGenerator<Int32>.Value PropertyStoredSettingsGenerator<Int32>.TypeName PropertyStoredSettingsGenerator<Int32>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<Int32>.Converter PropertyStoredSettingsGenerator<Int32>.Processor PropertyStoredSettingsGenerator<Int32>.PropertyName PropertyStoredSettingsGenerator<Int32>.SetValue(Int32, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<Int32>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Int32>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<Int32>.GetterCode PropertyStoredSettingsGenerator<Int32>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredIntGenerator : PropertyStoredSettingsGenerator<int>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredIntGenerator(String, Int32) Declaration public StoredIntGenerator(string key, int defaultValue) Parameters Type Name Description String key Int32 defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, Int32) Declaration public override int DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, int defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 defaultValue Returns Type Description Int32 Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Int32>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, System.Int32) IsSameValue(Int32) Declaration public override bool IsSameValue(int compareValue) Parameters Type Name Description Int32 compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Int32>.IsSameValue(System.Int32) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.Int32>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredPlayTimeGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredPlayTimeGenerator.html",
    "title": "Class StoredPlayTimeGenerator | Saves documentation",
    "keywords": "Class StoredPlayTimeGenerator Generates a property in GameSettings , providing how long the player has played the game. Inheritance Object GeneratorDecorator PropertyGenerator StoredPlayTimeGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyGenerator.TypeName PropertyGenerator.PropertyName PropertyGenerator.GetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredPlayTimeGenerator : PropertyGenerator, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredPlayTimeGenerator(String, String) Declaration public StoredPlayTimeGenerator(string key, string propertyName) Parameters Type Name Description String key String propertyName Properties Key Declaration public override string Key { get; } Property Value Type Description String Overrides GeneratorDecorator.Key SetterCode Declaration public override GeneratorDecorator.PropertyWriter SetterCode { get; set; } Property Value Type Description GeneratorDecorator.PropertyWriter Overrides PropertyGenerator.SetterCode TotalPlayTime Declaration public TimeSpan TotalPlayTime { get; } Property Value Type Description TimeSpan Methods OnClearSetting(ISettingsRecorder, Int32, Int32) Declaration public void OnClearSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnRetrieveSetting(ISettingsRecorder, Int32, Int32) Declaration public void OnRetrieveSetting(ISettingsRecorder settings, int recordedVersion, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion Int32 latestVersion OnSaveSetting(ISettingsRecorder, Int32) Declaration public void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredStringGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredStringGenerator.html",
    "title": "Class StoredStringGenerator | Saves documentation",
    "keywords": "Class StoredStringGenerator Generates a string property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < String > StoredStringGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<String>.DefaultGetterCode PropertyStoredSettingsGenerator<String>.DefaultSetterCode PropertyStoredSettingsGenerator<String>.Key PropertyStoredSettingsGenerator<String>.Value PropertyStoredSettingsGenerator<String>.TypeName PropertyStoredSettingsGenerator<String>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<String>.Converter PropertyStoredSettingsGenerator<String>.Processor PropertyStoredSettingsGenerator<String>.PropertyName PropertyStoredSettingsGenerator<String>.SetValue(String, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<String>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<String>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<String>.GetterCode PropertyStoredSettingsGenerator<String>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredStringGenerator : PropertyStoredSettingsGenerator<string>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredStringGenerator(String, String) Declaration public StoredStringGenerator(string key, string defaultValue) Parameters Type Name Description String key String defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, String) Declaration public override string DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, string defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion String defaultValue Returns Type Description String Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.String>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, System.String) IsSameValue(String) Declaration public override bool IsSameValue(string compareValue) Parameters Type Name Description String compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.String>.IsSameValue(System.String) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<System.String>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.StoredTimeSpanGenerator.html": {
    "href": "api/OmiyaGames.Saves.StoredTimeSpanGenerator.html",
    "title": "Class StoredTimeSpanGenerator | Saves documentation",
    "keywords": "Class StoredTimeSpanGenerator Generates a property in GameSettings . Inheritance Object GeneratorDecorator PropertyStoredSettingsGenerator < TimeSpan > StoredTimeSpanGenerator Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting Inherited Members PropertyStoredSettingsGenerator<TimeSpan>.DefaultGetterCode PropertyStoredSettingsGenerator<TimeSpan>.DefaultSetterCode PropertyStoredSettingsGenerator<TimeSpan>.Key PropertyStoredSettingsGenerator<TimeSpan>.Value PropertyStoredSettingsGenerator<TimeSpan>.TypeName PropertyStoredSettingsGenerator<TimeSpan>.IsValueRetainedOnClear PropertyStoredSettingsGenerator<TimeSpan>.Converter PropertyStoredSettingsGenerator<TimeSpan>.Processor PropertyStoredSettingsGenerator<TimeSpan>.PropertyName PropertyStoredSettingsGenerator<TimeSpan>.SetValue(TimeSpan, ISettingsRecorder, Int32) PropertyStoredSettingsGenerator<TimeSpan>.OnClearSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<TimeSpan>.OnRetrieveSetting(ISettingsRecorder, Int32, Int32) PropertyStoredSettingsGenerator<TimeSpan>.GetterCode PropertyStoredSettingsGenerator<TimeSpan>.SetterCode GeneratorDecorator.CreatePropertyWriter(String, String) GeneratorDecorator.GetterScope GeneratorDecorator.SetterScope GeneratorDecorator.TooltipDocumentation Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class StoredTimeSpanGenerator : PropertyStoredSettingsGenerator<TimeSpan>, IStoredSettingGenerator, IGenerator, IStoredSetting, IUniqueSetting Constructors StoredTimeSpanGenerator(String, TimeSpan) Declaration public StoredTimeSpanGenerator(string key, TimeSpan defaultValue) Parameters Type Name Description String key TimeSpan defaultValue Methods DefaultSettingsRetrieval(ISettingsRecorder, Int32, TimeSpan) Declaration public override TimeSpan DefaultSettingsRetrieval(ISettingsRecorder settings, int recordedVersion, TimeSpan defaultValue) Parameters Type Name Description ISettingsRecorder settings Int32 recordedVersion TimeSpan defaultValue Returns Type Description TimeSpan Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<TimeSpan>.DefaultSettingsRetrieval(OmiyaGames.Saves.ISettingsRecorder, System.Int32, TimeSpan) IsSameValue(TimeSpan) Declaration public override bool IsSameValue(TimeSpan compareValue) Parameters Type Name Description TimeSpan compareValue Returns Type Description Boolean Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<TimeSpan>.IsSameValue(TimeSpan) OnSaveSetting(ISettingsRecorder, Int32) Declaration public override void OnSaveSetting(ISettingsRecorder settings, int latestVersion) Parameters Type Name Description ISettingsRecorder settings Int32 latestVersion Overrides OmiyaGames.Saves.PropertyStoredSettingsGenerator<TimeSpan>.OnSaveSetting(OmiyaGames.Saves.ISettingsRecorder, System.Int32) Implements IStoredSettingGenerator IGenerator IStoredSetting IUniqueSetting"
  },
  "api/OmiyaGames.Saves.VersionGeneratorArgs.html": {
    "href": "api/OmiyaGames.Saves.VersionGeneratorArgs.html",
    "title": "Class VersionGeneratorArgs | Saves documentation",
    "keywords": "Class VersionGeneratorArgs Arguments providing a collection of ISettingsVersionGenerator , sorted by version number in ascending order. Inheritance Object VersionGeneratorArgs Implements IEnumerable < ISettingsVersionGenerator > Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class VersionGeneratorArgs : EventArgs Methods AddVersion(ISettingsVersionGenerator, out String) Declaration public bool AddVersion(ISettingsVersionGenerator version, out string errorMessage) Parameters Type Name Description ISettingsVersionGenerator version String errorMessage Returns Type Description Boolean GetEnumerator() Declaration public IEnumerator<ISettingsVersionGenerator> GetEnumerator() Returns Type Description IEnumerator < ISettingsVersionGenerator > Implements IEnumerable<> See Also GameSettings ISettingsVersionGenerator"
  },
  "api/OmiyaGames.Saves.WaitLoad.html": {
    "href": "api/OmiyaGames.Saves.WaitLoad.html",
    "title": "Class WaitLoad | Saves documentation",
    "keywords": "Class WaitLoad An abstract coroutine that waits for a loading operation to finish. Contains a property indicating if the operation succeeded or not. Inheritance Object WaitLoad WaitLoadComposite WaitLoadImmediate WaitLoadValue<T> Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class WaitLoad : CustomYieldInstruction Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Making the interface asynchronous. Fields FAIL_ARGS Args for failed operations. Declaration public static readonly LoadFinishedEventArgs FAIL_ARGS Field Value Type Description LoadFinishedEventArgs SUCCESS_ARGS Args for successful operations. Declaration public static readonly LoadFinishedEventArgs SUCCESS_ARGS Field Value Type Description LoadFinishedEventArgs Properties CurrentState The current load state. Declaration public LoadState CurrentState { get; protected set; } Property Value Type Description LoadState Methods Reset() Declaration public override void Reset() Events OnLoadingFinished Event triggered when loading is finished. Declaration public abstract event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished"
  },
  "api/OmiyaGames.Saves.WaitLoad.LoadingFinished.html": {
    "href": "api/OmiyaGames.Saves.WaitLoad.LoadingFinished.html",
    "title": "Delegate WaitLoad.LoadingFinished | Saves documentation",
    "keywords": "Delegate WaitLoad.LoadingFinished TODO Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public delegate void LoadingFinished(WaitLoad source, LoadFinishedEventArgs args); Parameters Type Name Description WaitLoad source The caller of this event. LoadFinishedEventArgs args The argument for this event."
  },
  "api/OmiyaGames.Saves.WaitLoadBool.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadBool.html",
    "title": "Class WaitLoadBool | Saves documentation",
    "keywords": "Class WaitLoadBool Wraps WaitLoadValue<int> , converting to a boolean. Inheritance Object WaitLoad WaitLoadValue < Boolean > WaitLoadConvertValue < Boolean , Int32 > WaitLoadBool Implements IDisposable Inherited Members WaitLoadConvertValue<Boolean, Int32>.Parent WaitLoadConvertValue<Boolean, Int32>.OnLoadingFinished WaitLoadConvertValue<Boolean, Int32>.keepWaiting WaitLoadConvertValue<Boolean, Int32>.Result WaitLoadConvertValue<Boolean, Int32>.Convert(Int32) WaitLoadConvertValue<Boolean, Int32>.Dispose() WaitLoadValue<Boolean>.Result WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.OnLoadingFinished WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadBool : WaitLoadConvertValue<bool, int> Constructors WaitLoadBool(WaitLoadValue<Int32>) Declaration public WaitLoadBool(WaitLoadValue<int> source) Parameters Type Name Description WaitLoadValue < Int32 > source Methods Convert(Int32) Convert value from one to other. Declaration public override bool Convert(int oldValue) Parameters Type Name Description Int32 oldValue Returns Type Description Boolean Overrides OmiyaGames.Saves.WaitLoadConvertValue<System.Boolean, System.Int32>.Convert(System.Int32) ToBool(Int32) TODO Declaration public static bool ToBool(int value) Parameters Type Name Description Int32 value Returns Type Description Boolean ToInt(Boolean) TODO Declaration public static int ToInt(bool flag) Parameters Type Name Description Boolean flag Returns Type Description Int32 Implements IDisposable"
  },
  "api/OmiyaGames.Saves.WaitLoadComposite.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadComposite.html",
    "title": "Class WaitLoadComposite | Saves documentation",
    "keywords": "Class WaitLoadComposite TODO. Inheritance Object WaitLoad WaitLoadComposite Implements IDictionary < IAsyncSettingsRecorder , WaitLoad > Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadComposite : WaitLoad Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Initial verison. Constructors WaitLoadComposite() TODO Declaration public WaitLoadComposite() WaitLoadComposite(Int32) TODO Declaration public WaitLoadComposite(int capacity) Parameters Type Name Description Int32 capacity Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[IAsyncSettingsRecorder] Declaration public WaitLoad this[IAsyncSettingsRecorder key] { get; set; } Parameters Type Name Description IAsyncSettingsRecorder key Property Value Type Description WaitLoad keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean Keys Declaration public ICollection<IAsyncSettingsRecorder> Keys { get; } Property Value Type Description ICollection < IAsyncSettingsRecorder > Values Declaration public ICollection<WaitLoad> Values { get; } Property Value Type Description ICollection < WaitLoad > Methods Add(KeyValuePair<IAsyncSettingsRecorder, WaitLoad>) Declaration public void Add(KeyValuePair<IAsyncSettingsRecorder, WaitLoad> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoad > item Add(IAsyncSettingsRecorder, WaitLoad) Declaration public void Add(IAsyncSettingsRecorder key, WaitLoad value) Parameters Type Name Description IAsyncSettingsRecorder key WaitLoad value Clear() Declaration public void Clear() Contains(KeyValuePair<IAsyncSettingsRecorder, WaitLoad>) Declaration public bool Contains(KeyValuePair<IAsyncSettingsRecorder, WaitLoad> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoad > item Returns Type Description Boolean ContainsKey(IAsyncSettingsRecorder) Declaration public bool ContainsKey(IAsyncSettingsRecorder key) Parameters Type Name Description IAsyncSettingsRecorder key Returns Type Description Boolean CopyTo(KeyValuePair<IAsyncSettingsRecorder, WaitLoad>[], Int32) Declaration public void CopyTo(KeyValuePair<IAsyncSettingsRecorder, WaitLoad>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoad >[] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<KeyValuePair<IAsyncSettingsRecorder, WaitLoad>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < IAsyncSettingsRecorder , WaitLoad >> Remove(KeyValuePair<IAsyncSettingsRecorder, WaitLoad>) Declaration public bool Remove(KeyValuePair<IAsyncSettingsRecorder, WaitLoad> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoad > item Returns Type Description Boolean Remove(IAsyncSettingsRecorder) Declaration public bool Remove(IAsyncSettingsRecorder key) Parameters Type Name Description IAsyncSettingsRecorder key Returns Type Description Boolean TryGetValue(IAsyncSettingsRecorder, out WaitLoad) Declaration public bool TryGetValue(IAsyncSettingsRecorder key, out WaitLoad value) Parameters Type Name Description IAsyncSettingsRecorder key WaitLoad value Returns Type Description Boolean Events OnLoadingFinished Event triggered when loading is finished. Declaration public override event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished Overrides WaitLoad.OnLoadingFinished Implements IDictionary<, >"
  },
  "api/OmiyaGames.Saves.WaitLoadConvertValue-2.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadConvertValue-2.html",
    "title": "Class WaitLoadConvertValue<TNew, TOld> | Saves documentation",
    "keywords": "Class WaitLoadConvertValue<TNew, TOld> Wrapper class that converts a Result from TOld to TNew . Inheritance Object WaitLoad WaitLoadValue <TNew> WaitLoadConvertValue<TNew, TOld> WaitLoadBool WaitLoadDateTime WaitLoadEnum<T> WaitLoadTimeSpan Implements IDisposable Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class WaitLoadConvertValue<TNew, TOld> : WaitLoadValue<TNew> Type Parameters Name Description TNew The final type. TOld The original type. Remarks Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Initial draft. Version: 0.2.2-exp.1 Date: 3/2/2022 Author: Taro Omiya Changed OnLoadingFinished to convert the args parameter from LoadValueFinishedEventArgs<T> to LoadValueFinishedEventArgs<T> . Added abstract method, Convert(TOld) . Made Result sealed . Constructors WaitLoadConvertValue(WaitLoadValue<TOld>) TODO Declaration public WaitLoadConvertValue(WaitLoadValue<TOld> source) Parameters Type Name Description WaitLoadValue <TOld> source Properties keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean Parent Declaration protected WaitLoadValue<TOld> Parent { get; } Property Value Type Description WaitLoadValue <TOld> Result The results of loading an object. Declaration public sealed override TNew Result { get; } Property Value Type Description TNew Overrides OmiyaGames.Saves.WaitLoadValue<TNew>.Result Methods Convert(TOld) Convert value from one to other. Declaration public abstract TNew Convert(TOld oldValue) Parameters Type Name Description TOld oldValue Returns Type Description TNew Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() Events OnLoadingFinished Event triggered when loading is finished. Declaration public override event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished Overrides WaitLoad.OnLoadingFinished Implements IDisposable"
  },
  "api/OmiyaGames.Saves.WaitLoadDateTime.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadDateTime.html",
    "title": "Class WaitLoadDateTime | Saves documentation",
    "keywords": "Class WaitLoadDateTime Wraps WaitLoadValue<string> , converting to a . Inheritance Object WaitLoad WaitLoadValue < DateTime > WaitLoadConvertValue < DateTime , String > WaitLoadDateTime Implements IDisposable Inherited Members WaitLoadConvertValue<DateTime, String>.Parent WaitLoadConvertValue<DateTime, String>.OnLoadingFinished WaitLoadConvertValue<DateTime, String>.keepWaiting WaitLoadConvertValue<DateTime, String>.Result WaitLoadConvertValue<DateTime, String>.Convert(String) WaitLoadConvertValue<DateTime, String>.Dispose() WaitLoadValue<DateTime>.Result WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.OnLoadingFinished WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadDateTime : WaitLoadConvertValue<DateTime, string> Constructors WaitLoadDateTime(WaitLoadValue<String>) Declaration public WaitLoadDateTime(WaitLoadValue<string> source) Parameters Type Name Description WaitLoadValue < String > source Methods Convert(String) Convert value from one to other. Declaration public override DateTime Convert(string oldValue) Parameters Type Name Description String oldValue Returns Type Description DateTime Overrides OmiyaGames.Saves.WaitLoadConvertValue<DateTime, System.String>.Convert(System.String) ToDateTimeUtc(String) TODO Declaration public static DateTime ToDateTimeUtc(string value) Parameters Type Name Description String value Returns Type Description DateTime ToString(DateTime) TODO Declaration public static string ToString(DateTime timeUtc) Parameters Type Name Description DateTime timeUtc Returns Type Description String Implements IDisposable"
  },
  "api/OmiyaGames.Saves.WaitLoadEnum-1.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadEnum-1.html",
    "title": "Class WaitLoadEnum<T> | Saves documentation",
    "keywords": "Class WaitLoadEnum<T> Wraps WaitLoadValue<int> , converting to an enum. Inheritance Object WaitLoad WaitLoadValue <T> WaitLoadConvertValue <T, Int32 > WaitLoadEnum<T> Implements IDisposable Inherited Members WaitLoadConvertValue<T, Int32>.Parent WaitLoadConvertValue<T, Int32>.OnLoadingFinished WaitLoadConvertValue<T, Int32>.keepWaiting WaitLoadConvertValue<T, Int32>.Result WaitLoadConvertValue<T, Int32>.Convert(Int32) WaitLoadConvertValue<T, Int32>.Dispose() WaitLoadValue<T>.Result WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.OnLoadingFinished WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadEnum<T> : WaitLoadConvertValue<T, int> where T : Enum Type Parameters Name Description T Constructors WaitLoadEnum(WaitLoadValue<Int32>) Declaration public WaitLoadEnum(WaitLoadValue<int> source) Parameters Type Name Description WaitLoadValue < Int32 > source Methods Convert(Int32) Convert value from one to other. Declaration public override T Convert(int oldValue) Parameters Type Name Description Int32 oldValue Returns Type Description T Overrides OmiyaGames.Saves.WaitLoadConvertValue<T, System.Int32>.Convert(System.Int32) ToInt(IConvertible) TODO Declaration public static int ToInt(IConvertible value) Parameters Type Name Description IConvertible value Returns Type Description Int32 Implements IDisposable"
  },
  "api/OmiyaGames.Saves.WaitLoadFlags.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadFlags.html",
    "title": "Class WaitLoadFlags | Saves documentation",
    "keywords": "Class WaitLoadFlags A coroutine that waits for all listed flags to finish loading. Inheritance Object WaitLoad WaitLoadValue < Boolean > WaitLoadFlags Implements IDictionary < IAsyncSettingsRecorder , WaitLoadValue < Boolean >> Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadFlags : WaitLoadValue<bool> Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/19/2022 Author: Taro Omiya Making the interface asynchronous. Constructors WaitLoadFlags() TODO Declaration public WaitLoadFlags() WaitLoadFlags(Int32) TODO Declaration public WaitLoadFlags(int capacity) Parameters Type Name Description Int32 capacity Properties Count Declaration public int Count { get; } Property Value Type Description Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Item[IAsyncSettingsRecorder] Declaration public WaitLoadValue<bool> this[IAsyncSettingsRecorder key] { get; set; } Parameters Type Name Description IAsyncSettingsRecorder key Property Value Type Description WaitLoadValue < Boolean > keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean Keys Declaration public ICollection<IAsyncSettingsRecorder> Keys { get; } Property Value Type Description ICollection < IAsyncSettingsRecorder > Result The results of loading an object. Declaration public override bool Result { get; } Property Value Type Description Boolean Overrides OmiyaGames.Saves.WaitLoadValue<System.Boolean>.Result Values Declaration public ICollection<WaitLoadValue<bool>> Values { get; } Property Value Type Description ICollection < WaitLoadValue < Boolean >> Methods Add(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<Boolean>>) Declaration public void Add(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<bool>> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoadValue < Boolean >> item Add(IAsyncSettingsRecorder, WaitLoadValue<Boolean>) Declaration public void Add(IAsyncSettingsRecorder key, WaitLoadValue<bool> value) Parameters Type Name Description IAsyncSettingsRecorder key WaitLoadValue < Boolean > value Clear() Declaration public void Clear() Contains(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<Boolean>>) Declaration public bool Contains(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<bool>> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoadValue < Boolean >> item Returns Type Description Boolean ContainsKey(IAsyncSettingsRecorder) Declaration public bool ContainsKey(IAsyncSettingsRecorder key) Parameters Type Name Description IAsyncSettingsRecorder key Returns Type Description Boolean CopyTo(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<Boolean>>[], Int32) Declaration public void CopyTo(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<bool>>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoadValue < Boolean >>[] array Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<bool>>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < IAsyncSettingsRecorder , WaitLoadValue < Boolean >>> Remove(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<Boolean>>) Declaration public bool Remove(KeyValuePair<IAsyncSettingsRecorder, WaitLoadValue<bool>> item) Parameters Type Name Description KeyValuePair < IAsyncSettingsRecorder , WaitLoadValue < Boolean >> item Returns Type Description Boolean Remove(IAsyncSettingsRecorder) Declaration public bool Remove(IAsyncSettingsRecorder key) Parameters Type Name Description IAsyncSettingsRecorder key Returns Type Description Boolean TryGetValue(IAsyncSettingsRecorder, out WaitLoadValue<Boolean>) Declaration public bool TryGetValue(IAsyncSettingsRecorder key, out WaitLoadValue<bool> value) Parameters Type Name Description IAsyncSettingsRecorder key WaitLoadValue < Boolean > value Returns Type Description Boolean Events OnLoadingFinished Event triggered when loading is finished. Declaration public override event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished Overrides WaitLoad.OnLoadingFinished Implements IDictionary<, >"
  },
  "api/OmiyaGames.Saves.WaitLoadImmediate.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadImmediate.html",
    "title": "Class WaitLoadImmediate | Saves documentation",
    "keywords": "Class WaitLoadImmediate A coroutine that immediately finishes with success status. Inheritance Object WaitLoad WaitLoadImmediate Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public sealed class WaitLoadImmediate : WaitLoad Properties keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean Events OnLoadingFinished Event triggered when loading is finished. Declaration public override event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished Overrides WaitLoad.OnLoadingFinished"
  },
  "api/OmiyaGames.Saves.WaitLoadTimeSpan.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadTimeSpan.html",
    "title": "Class WaitLoadTimeSpan | Saves documentation",
    "keywords": "Class WaitLoadTimeSpan Wraps WaitLoadValue<string> , converting to a . Inheritance Object WaitLoad WaitLoadValue < TimeSpan > WaitLoadConvertValue < TimeSpan , String > WaitLoadTimeSpan Implements IDisposable Inherited Members WaitLoadConvertValue<TimeSpan, String>.Parent WaitLoadConvertValue<TimeSpan, String>.OnLoadingFinished WaitLoadConvertValue<TimeSpan, String>.keepWaiting WaitLoadConvertValue<TimeSpan, String>.Result WaitLoadConvertValue<TimeSpan, String>.Convert(String) WaitLoadConvertValue<TimeSpan, String>.Dispose() WaitLoadValue<TimeSpan>.Result WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.OnLoadingFinished WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadTimeSpan : WaitLoadConvertValue<TimeSpan, string> Constructors WaitLoadTimeSpan(WaitLoadValue<String>) Declaration public WaitLoadTimeSpan(WaitLoadValue<string> source) Parameters Type Name Description WaitLoadValue < String > source Methods Convert(String) Convert value from one to other. Declaration public override TimeSpan Convert(string oldValue) Parameters Type Name Description String oldValue Returns Type Description TimeSpan Overrides OmiyaGames.Saves.WaitLoadConvertValue<TimeSpan, System.String>.Convert(System.String) ToString(TimeSpan) TODO Declaration public static string ToString(TimeSpan duration) Parameters Type Name Description TimeSpan duration Returns Type Description String ToTimeSpan(String) TODO Declaration public static TimeSpan ToTimeSpan(string value) Parameters Type Name Description String value Returns Type Description TimeSpan Implements IDisposable"
  },
  "api/OmiyaGames.Saves.WaitLoadValue-1.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadValue-1.html",
    "title": "Class WaitLoadValue<T> | Saves documentation",
    "keywords": "Class WaitLoadValue<T> An abstract coroutine that waits for a loading operation to finish. Contains a property indicating if the operation succeeded or not, as well as the retrieved value if successful. Inheritance Object WaitLoad WaitLoadValue<T> WaitLoadConvertValue<TNew, TOld> WaitLoadFlags WaitLoadValueImmediate<T> Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.OnLoadingFinished WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public abstract class WaitLoadValue<T> : WaitLoad Type Parameters Name Description T Sets the type. Remarks The MIT License (MIT) Copyright (c) 2022 Omiya Games Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Revision Description Version: 0.2.0-exp.1 Date: 2/16/2022 Author: Taro Omiya Making the interface asynchronous. Properties Result The results of loading an object. Declaration public abstract T Result { get; } Property Value Type Description T"
  },
  "api/OmiyaGames.Saves.WaitLoadValueImmediate-1.html": {
    "href": "api/OmiyaGames.Saves.WaitLoadValueImmediate-1.html",
    "title": "Class WaitLoadValueImmediate<T> | Saves documentation",
    "keywords": "Class WaitLoadValueImmediate<T> Inheritance Object WaitLoad WaitLoadValue <T> WaitLoadValueImmediate<T> Inherited Members WaitLoad.SUCCESS_ARGS WaitLoad.FAIL_ARGS WaitLoad.CurrentState WaitLoad.Reset() Namespace : OmiyaGames.Saves Assembly : cs.temp.dll.dll Syntax public class WaitLoadValueImmediate<T> : WaitLoadValue<T> Type Parameters Name Description T Constructors WaitLoadValueImmediate(T) Constructs a non-waiting coroutine, with result already set. Declaration public WaitLoadValueImmediate(T initialResultValue) Parameters Type Name Description T initialResultValue The value of Result Properties keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean Result The results of loading an object. Declaration public override T Result { get; } Property Value Type Description T Overrides OmiyaGames.Saves.WaitLoadValue<T>.Result Events OnLoadingFinished Event triggered when loading is finished. Declaration public override event WaitLoad.LoadingFinished OnLoadingFinished Event Type Type Description WaitLoad.LoadingFinished Overrides WaitLoad.OnLoadingFinished"
  },
  "index.html": {
    "href": "index.html",
    "title": "Omiya Games - Saves | Saves documentation",
    "keywords": "Omiya Games - Saves Omiya Games - Saves is a work-in-progress save system for persistent in-game data. Uses ScriptableObject extensively. Install There are two common methods for installing this package. Through Unity Package Manager Unity's own Package Manager supports importing packages through a URL to a Git repo : First, on this repository page, click the \"Clone or download\" button, and copy over this repository's HTTPS URL. Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste this repo's URL! While easy and straightforward, this method has a few major downside: it does not support dependency resolution and package upgrading when a new version is released. To add support for that, the following method is recommended: Through OpenUPM Installing via OpenUPM's command line tool is recommended because it supports dependency resolution, upgrading, and downgrading this package. Given this package is just an example, thought, it hadn't been added into OpenUPM yet. So the rest of these instructions are hypothetical...for now... If you haven't already installed OpenUPM , you can do so through Node.js's npm (obviously have Node.js installed in your system first): npm install -g openupm-cli Then, to install this package, just run the following command at the root of your Unity project: openupm add com.omiyagames.saves Resources Documentation Change Log LICENSE Overall package is licensed under MIT , unless otherwise noted in the 3rd party licenses file and/or source code. Copyright (c) 2019-2022 Omiya Games"
  },
  "manual/changelog.html": {
    "href": "manual/changelog.html",
    "title": "Change Log: | Saves documentation",
    "keywords": "Change Log: 0.2.3-exp.1 New Enhancement : updating SavesManager.cs to match latest com.omiyagames.global.settings standards. 0.2.2-exp Bug Fix : fixed AsyncSettingsRecorderDecorator.cs so returns of SetBool(string, bool) , SetEnum<TEnum>(string, TEnum) , GetDateTimeUtc(string, DateTime) , GetTimeSpan(string, TimeSpan) has the event format expected by SaveBool.cs , SaveEnum.cs , SaveDateTime.cs , and SaveTimeSpan.cs . This should also fix AsyncPlayerPrefsSettingsRecorder.cs . New Enhancement : changed SavesManager.cs to a static class . This prevents SavesManager from being attached to a GameObject . 0.2.1-exp Bug Fix : fixed SaveObjectMap.cs not deserializing correctly on the inspector and Project Settings window, thus losing all data. The fix requires future code to call the new method Setup() . Breaking Change : renamed SavesManager.cs method TryGetSave() to TryGet() to remove the implication that any save operation is being performed. 0.2.0-exp New Features : starting on a new, ScriptableObject driven framework to save and recall PlayerPrefs data. It's currently a work-in-progress, but we believe is the more intuitive and flexible method for saving and recalling persistent data. Created SavesSettingsProvider.cs , which can be edited in Project Settings window. It contains the method save data will be stored, scripts that can upgrade previous data (for adding backwards compatibility,) and what SaveObjects to pre-load. Created SavesManager.cs , which handles loading and saving SaveObjects . The singleton is accessible anyhere. Created AsyncSettingsRecorder.cs : an abstract ScriptableObject provides an interface for writing and recording data asynchronously. Created AsyncPlayerPrefsSettingsRecorder.cs , an implementation that uses PlayerPrefs . Created SaveObject.cs ScriptableObject . It's an abstract class for saving and recalling a specific save data. SavesManager configures a SaveObject by setting up which AsyncSettingsRecorder all objects should use based on platform. Created SaveInt.cs , an implementation that stores and recalls an integer. Created SaveFloat.cs , an implementation that stores and recalls a float. Created SaveString.cs , an implementation that stores and recalls a string. Created SaveBool.cs , an implementation that stores and recalls a bool. Created SaveEnum.cs , an abstract implementation that stores and recalls an enum. Created SaveDateTime.cs , an abstract implementation that stores and recalls a DateTime in UTC timezone. Created SaveTimeSpan.cs , an abstract implementation that stores and recalls a TimeSpan . Created SavesUpgrader.cs ScriptableObject . It's an abstract class for upgrading previous saves into the latest expectation. SavesManager.cs calls these scripts first before retrieving any SaveObject.cs data. 0.1.1-exp Polishing DocFX setup. 0.1.0-exp Initial release: Copied source from Template Unity Project ."
  },
  "manual/README.html": {
    "href": "manual/README.html",
    "title": "| Saves documentation",
    "keywords": "This folder contains markdown files listed under \"Manual\" section in the documentation. When adding or removing any files in this folder, don't forget to update toc.yml accordingly!"
  }
}